(申请工学博士学位论文)
基于预测控制的无人船运动
控制方法研究
培 养 单 位:能源与动力工程学院
学 科 专 业:交通运输工程
研 究 生:柳晨光
指 导 教 师:初秀民 研究员
2017 年 5 月


分类号 密 级
UDC 学校代码 10497
学 位 论文
题 目 基于预测控制的无人船运动控制方法研究
英 文 Motion Control of Unmanned Surface Vehicles
题 目 Based on Model Predictive Control
研究生姓名 柳晨光
姓名 初秀民 职称 研究员 学位 博士
单位名称 武汉理工大学 邮编 430063
申请学位级别 博士 学科专业名称 交通运输工程
论文提交日期 2017-3 论文答辩日期 2017-5
学位授予单位 武汉理工大学 学位授予日期 2017-6
答辩委员会主席 评阅人
2017 年 5 月
指导教师


A Dissertation Submitted to
Wuhan University of Technology
For the Doctor’s Degree in Engineering
Motion Control of Unmanned Surface Vehicles Based
on Model Predictive Control
Doctor Candidate: Liu Chenguang Major: Traffic and Transportation Engineering Supervisor: Prof. Chu Xiumin
Wuhan University of Technology
Wuhan, 430063, P.R.China
May, 2017




I
摘要
无人船(unmanned surface vehicles, USV)是一种船端无人操控的水面船舶,
近年来受到了广泛关注。如何实现自主航行是 USV 面临的核心问题,而设计一
种具有精确航迹控制能力的运动控制器是解决该问题的基础。本文围绕 USV 运
动控制的两种基本形式——轨迹跟踪(trajectory tracking)控制和路径跟随
(path following)控制,在模型预测控制(model predictive control, MPC)方法
基础上结合视距(line-of-sight, LOS)导航、最小支持向量机(least squares
support vector machines, LS-SVM)、扩张状态观测器(extended state observer,
ESO)等方法开展 USV 运动控制研究,以解决运动控制中由于环境干扰影响、
模型参数改变、参数和干扰不可测等因素导致的控制精度不高问题,并利用建
立的 USV 运动控制实验平台在真实环境下验证所提出的运动控制算法的有效性。
本文主要研究工作和成果如下:
(1)为解决不确定环境下带系统约束的欠驱动 USV 轨迹跟踪问题,利用
水动力模型分别提出了基于线性 MPC(linear MPC, LMPC)和非线性 MPC
(nonlinear MPC, NMPC)轨迹跟踪控制方法,并分别描述了状态空间模型建立、
模型线性化与离散化、约束设置、目标函数设计等过程。通过仿真实验分析了
这两种方法的轨迹跟踪控制效果,结果表明,本文所提出的 LMPC 和 NMPC 方
法均具有较好的轨迹跟踪控制效果且能抵抗一定强度的干扰,LMPC 方法在计
算效率上优于 NMPC 方法,而 NMPC 方法具有更高的控制精度。通过与滑模控
制器对比得出,基于 MPC 的 USV 轨迹跟踪控制器具有更优良的控制效果。
(2)针对 USV 运动控制中的路径跟随控制问题,为克服水动力模型参数
难以辨识的弊端,提出了一种基于二阶非线性 Nomoto 舵角响应模型的路径跟
随控制方法。首先,在传统 LOS 导航方法的基础上提出了一种自适应 LOS 导航
算法来提高路径切换时的跟踪精度,该自适应 LOS 导航算法主要是通过自动调
节路径点接纳圆大小以获得更高的跟踪精度;其次,提出了一种基于自适应
LOS 导航方法和 MPC 方法的路径跟随控制方法;最后,分别在无环境干扰和有
环境干扰情况下对路径跟随的效果进行了仿真验证。结果表明,相比于传统
LOS 导航方法,自适应 LOS 导航方法结合 MPC 控制具有更高的路径跟踪控制
精度,且该路径跟随控制方法在一定水流和其他干扰的情况下仍能较好地完成
路径跟踪控制。


II
(3)为解决 USV 在路径跟随中由于模型参数改变引起的控制效果变差问
题,提出了一种基于 λ-LS-SVM 和 MPC 的自适应路径跟随控制方法。其中,λ
LS-SVM 用于运动模型参数的在线参数辨识,具体是基于滑动数据窗口实现数
据集的在线更新,基于一种模型变化指数 λ 来判断模型是否发生改变,利用输
入持续激励方法保证参数辨识过程中有足够的激励。对于所提出基于 λ-LS
SVM 和 MPC 的自适应路径跟随控制方法,在仿真实验中通过设置不同场景来
验证 λ-LS-SVM 对提升参数辨识精度的效果,以及验证该自适应控制方法能否
自动适应自身和外界环境的改变。结果表明,相比于 LS-SVM,λ-LS-SVM 方法
能较稳定地辨识模型参数,提出的自适应控制方法也能较好地应对路径跟随过
程中模型参数的改变。
(4)针对 USV 运动控制过程中某些状态参数不可测和干扰不可知的问题,
提出了一种基于补偿扩张状态观测器(extended state observer, ESO)的 MPC 控
制方法。补偿 ESO 观测器是在传统 ESO 观测器基础上提出的,具体是将模型中
的非线性项和外界干扰统一为集总干扰来处理。在理论上对观测器的收敛性进
行了分析。补偿 ESO 观测器将复杂的非线性模型转换为线性模型,使 MPC 最
优化问题求解效率显著提升。在仿真环境下通过数值计算示例和 USV 船首向跟
踪示例均验证了补偿 ESO 观测器能够无静差地估计不可测状态和干扰,具有较
好的控制效果。
(5)提出了一种基于自适应 LOS 导航、补偿 ESO 观测器和 MPC(LOS
ESO-MPC, LEM)的 USV 路径跟随控制方法。在仿真环境下,通过与 PID
(proportional–integral–derivative,比例-积分-微分)控制方法对比验证表明,
LEM 控制方法能够在未知外界干扰和未知状态量下完成精确的路径跟随控制,
且比 PID 具有更高的跟踪精度。
(6)搭建了基于模型船的 USV 运动控制实验平台。针对模型船的室内定
位和船首向获取问题,提出了一种基于单目视觉的高精度定位方法。为验证本
文提出的 USV 运动控制方法在真实环境下的控制效果,在模型船实验平台上开
展了基于 MPC 的航向跟踪控制、基于 MPC 的路径跟随控制、自适应 LOS 导航
算法、基于 LEM 的路径跟随等实验,通过与其他方法的对比验证了本文所提出
的方法在真实环境下具有更好的控制效果。
关键词:无人船,船舶智能化,轨迹跟踪,路径跟随,模型预测控制,自适应
控制


III
Abstract
Unmanned surface vehicles (USV), which are navigated without persons onboard,
are obtaining more and more attention. Autonomous navigation is a key chanllenge for
USV application. Considering that a motion controller with the ability of precise
tracking control is the basis of realizing autonomous navigation, the two patterns of
motion control, i.e., trajectory tracking and path following, are focused and discussed
in this thesis. Model predictive control (MPC) combined with line-of-sight (LOS), least
squares support vector machines (LS-SVM), extended state observer (ESO) and other
methods is used for USV motion control studies to improve the precision and
reliabilities for the motion control when there exist environmental disturbances, model
parameter change, unmeasurable states and disturbances. A USV motion control
experimental platform is built based on a model ship to verify the effectiveness of
proposed methods. The main works and contributions in this thesis are summarized as
follows:
(1) For the USV trajectory tracking control under uncertainties, a linear MPC
(LMPC) and a nonlinear MPC (NMPC) method based on dynamics models are
proposed. The modelling, model linearization, model discretization, constraints setting,
objective function designing are elaborated specifically. The trajectory tracking control
experiments with LMPC and NMPC are realized on the Matlab simulation platform,
respectively. The simulation experiment results show that the two methods both track
the trajectory well even under disturbances. However, LMPC has higher computational
efficiency than NMPC because the optimization problem for LMPC is a quadratic
programming problem. In contrast, NMPC has higher tracking precision because there
is no linearization process to decrease the model accuracy. In comparison with the
sliding-mode control (SMC) based method, the MPC method has better performance
of trajectory tracking.
(2) For the USV path following control, a path following method based on a 2nd
order Nomoto model is proposed to avoid the difficulties of parameter identification
for the dynamic models. Firstly, an adaptive LOS navigation algorithm is proposed to
improve the tracking precision by setting the different acceptance circle automatically
according to the angle between two adjacent path segments. Secondly, a path following


IV
control method is proposed based on the adaptive LOS navigation algorithm and the
MPC method. Lastly, the path following performance by the use of the proposed
method is realized on the simulation platform under both disturbances and no
disturbances. The results show that the MPC path following control method combined
with the adaptive LOS navigation algorithm has higher tracking precison in comparison
with the MPC method combined with the traditional LOS navigation algorithm, and it
performs well with the nonzero current speed and disturbances.
(3) For the problems that the USV path following performance may turn worse
when the model parameters change because of aging, draught change, etc., a λ-LS
SVM based MPC adaptive control method for path following is proposed. The λ-LS
SVM based on the weighted LS-SVM is proposed to use for the model online parameter
identification. To be specific, an index is designed to detect the possible model changes,
which speeds up the rate of parameter convergence; a sliding data window strategy is
used to realize the online identification; a persistent input excitation scheme is
introduced. The effectiveness of online parameter identification with λ-LS-SVM is
verified by setting different simulation scenarios. The proposed adaptive control
method can track the path well when the model parameters change during the path
following.
(4) Considering that some parameters or disturbances cannot be measured directly,
an MPC method based on compensation extended state observer (CESO) is proposed.
The CESO unifies nonlinear terms of the system model and disturbances as lumped
disturbances, and makes the nonlinear model change to a linear model with the lumped
disturbances compensation. The stability of CESO is analyzed in theory. For the MPC,
as previously mentioned, a linear model can make the computational efficiency higner.
Two cases, i.e., numerical calculation case and USV heading tracking case, have been
used to verify the effectiveness of the control and state estimation performance.
(5) A novel path following control method, namely LEM (LOS-ESO-MPC), based
on the adaptive LOS navigation algorithm, the CESO, the MPC for USV is proposed.
The simulation results show that a precision path following control performance can
be achieved when there exist external disturbances and unknown or unmeasurable
states by the LEM method. The LEM method has higher tracking precision in
comparison with PID (proportional–integral–derivative) method.


V
(6) A USV motion control platform based on a model ship is built to verify the
effectiveness of main proposed methods in this thesis. To solve the locating and
heading sensing problems of the model ship for the indoor environment, a monocular
vison based locating algorithm is designed. The course and speed keeping stabilities
for the model ship are tested. Based on this platform, the MPC methods for course
tracking and path following, and the adaptive LOS method and the LEM method are
all tested. The results show that the motion related methods proposed in this thesis
perform well in real environment by comparing with other methods.
Key words: unmanned surface vehicles, ship intelligence, trajectory tracking, path
following, model predictive control, adaptive control


VI
目录
摘 要 ................................................................ I
Abstract............................................................. III
主要符号表 ............................................................ X
第 1 章 绪论 .......................................................... 1
1.1 引言 ........................................................1
1.2 USV 路径跟踪控制现状 .........................................3
1.2.1 路径跟踪控制方法 ........................................3
1.2.2 自适应控制方法 ..........................................9
1.2.3 视距导航算法 ...........................................14
1.3 USV 状态观测器研究现状 ......................................15
1.3.1 UIO 观测器 ..............................................15
1.3.2 ESO 观测器 ..............................................16
1.4 论文的项目来源 .............................................16
1.5 论文结构及主要内容 .........................................16
第 2 章 无人船运动建模 ............................................... 19
2.1 船舶运动模型 ...............................................19
2.1.1 运动坐标系 .............................................19
2.1.2 水动力模型 .............................................20
2.1.3 响应型模型 .............................................24
2.2 环境干扰 ...................................................27
2.2.1 水动力模型 .............................................27
2.2.2 响应型模型 .............................................29
2.3 模型不确定性 ...............................................30
2.3.1 水动力模型 .............................................30
2.3.2 响应型模型 .............................................31
2.4 本章小结 ...................................................32
第 3 章 不确定环境下基于预测控制的无人船轨迹跟踪控制 ................ 33
3.1 基本原理 ...................................................33
3.1.1 MPC 基本原理 ............................................33


VII
3.1.2 基于 MPC 的 USV 轨迹跟踪基本原理 .........................34
3.2 基于线性 MPC 的轨迹跟踪控制 .................................35
3.2.1 非线性状态空间模型建立 .................................35
3.2.2 模型线性化和离散化 .....................................35
3.2.3 约束条件设置 ...........................................37
3.2.4 最优化问题 .............................................39
3.2.5 仿真实验 ...............................................40
3.3 基于非线性 MPC 的轨迹跟踪控制 ...............................48
3.3.1 模型离散化 .............................................48
3.3.2 约束条件设置 ...........................................49
3.3.3 最优化问题 .............................................50
3.3.4 仿真实验 ...............................................50
3.4 基于 MPC 与基于滑模控制的轨迹跟踪效果对比 ...................52
3.4.1 基于滑模控制的轨迹跟踪控制方法 .........................52
3.4.2 仿真实验对比 ...........................................53
3.5 本章小结 ...................................................54
第 4 章 基于自适应 LOS 的无人船路径跟随控制........................... 56
4.1 路径跟随控制原理 ...........................................56
4.2 自适应 LOS 导航 .............................................57
4.2.1 LOS 基本原理 ............................................57
4.2.2 自适应 LOS 导航算法 .....................................60
4.3 路径跟随控制模型 ...........................................61
4.3.1 响应型模型 .............................................62
4.3.2 路径跟随控制模型 .......................................62
4.4 基于自适应 LOS 和 MPC 的路径跟随控制 .........................63
4.5 仿真实验 ...................................................64
4.5.1 仿真参数设计 ...........................................64
4.5.2 自适应 LOS 参数整定 .....................................65
4.5.3 自适应 LOS 与传统 LOS 的路径跟随效果对比 .................66
4.5.4 无干扰情况下基于自适应 LOS 和 MPC 的路径跟随控制 .........68
4.5.5 基于 MPC 与基于 Backstepping 的路径跟随对比 ..............68
4.5.6 干扰情况下基于自适应 LOS 和 MPC 的路径跟随控制 ...........71


VIII
4.6 本章小结 ...................................................75
第 5 章 模型不确定下基于 LS-SVM 的无人船路径跟随自适应控制 ........... 76
5.1 基于传统 LS-SVM 的运动模型参数辨识方法 ......................76
5.1.1 基于传统 LS-SVM 的函数估计方法 ..........................76
5.1.2 基于传统 LS-SVM 的船舶路径跟随参数辨识方法 ..............79
5.2 基于 λ-LS-SVM 的运动模型在线参数辨识方法 ...................81
5.2.1 基于滑动数据窗口的在线辨识方法 .........................81
5.2.2 模型变化指数设计 .......................................82
5.2.3 输入持续激励方法 .......................................83
5.2.4 基于 λ-LS-SVM 的船舶运动模型在线辨识算法 ...............84
5.3 基于 λ-LS-SVM 和 MPC 的自适应路径跟随控制 ...................85
5.4 仿真实验 ...................................................86
5.4.1 场景 1:机构老化引起的参数改变 ..........................87
5.4.2 场景 2:水流等引起的参数改变 ............................88
5.4.3 场景 3:船舶操纵性的改变 ................................89
5.4.4 仿真结果及分析 .........................................91
5.5 本章小结 ...................................................91
第 6 章 含未知状态和干扰时基于 ESO 观测器的无人船路径跟随控制 ........ 92
6.1 通用 ESO 观测器 .............................................92
6.1.1 ESO 观测器的提出 ........................................92
6.1.2 通用 ESO 观测器的提出 ...................................94
6.2 补偿 ESO 观测器 .............................................97
6.2.1 连续补偿扩张状态观测器 .................................97
6.2.2 离散补偿扩张状态观测器 .................................99
6.3 基于离散补偿 ESO 观测器的 MPC 控制方法 ......................100
6.3.1 方法的提出 ............................................100
6.3.2 稳定性分析 ............................................101
6.3.3 实例验证 ..............................................104
6.4 基于 LEM 控制方法的路径跟随控制 ............................110
6.4.1 基本原理 ..............................................111
6.4.2 仿真实验验证 ..........................................111
6.5 本章小结 ..................................................115


IX
第 7 章 无人船运动控制实验平台验证研究.............................. 116
7.1 模型船运动控制实验平台 ....................................116
7.1.1 模型船 ................................................118
7.1.2 感知系统 ..............................................119
7.1.3 运动控制器 ............................................120
7.1.4 远程监控系统 ..........................................121
7.1.5 模型船平台性能测试 ....................................122
7.2 平台算法实现 ..............................................123
7.2.1 MPC 算法 ...............................................124
7.2.2 传感器滤波算法 ........................................125
7.2.3 舵角反馈控制算法 ......................................125
7.2.4 基于单目视觉的定位算法 ................................126
7.3 实验验证 ..................................................128
7.3.1 基于 MPC 与基于 PID 的航向跟踪控制对比实验 ..............129
7.3.2 基于 MPC 与基于 PID 的路径跟随控制对比实验 ..............132
7.3.3 自适应 LOS 导航算法与固定 LOS 导航算法对比实验 ..........134
7.3.4 基于 LEM 的路径跟随控制实验 ............................137
7.4 本章小结 ..................................................140
第 8 章 结论、主要创新点及展望 ...................................... 141
8.1 结论 ......................................................141
8.2 主要创新点 ................................................142
8.3 展望 ......................................................142
致 谢 .............................................................. 144
参考文献 ............................................................ 145
博士期间已发表或投稿的论文、申请的专利以及参与的科研项目 ........... 155


X
主要符号表
表I 中英文缩写对应表
中文名称 英文全称 英文简称 模型预测控制(预测控制) model predictive control MPC 线性模型预测控制 linear model predictive control LMPC 非线性模型预测控制 nonlinear model predictive control NMPC 显示模型预测控制 explicit MPC 无人船 unmanned surface vehicles USV 比例-积分-微分 proportional–integral–derivative PID 视距 line-of-sight LOS 支持向量机 support vector machines SVM 最小支持向量机 least squares support vector machines LS-SVM λ-最小支持向量机 λ least squares support vector machines λ-LS-SVM 全球定位系统 global positioning system GPS 扩张状态观测器 extended state observer ESO 线性扩张状态观测器 linear extended state observer LESO 补偿扩展状态观测器 compeansation extended state observer CESO 通用扩张状态观测器 generalized extended state observer GESO 轨迹跟踪 trajectory tracking 路径跟随 path following - LOS-ESO-MPC LEM 反馈线性化 feedback linearization 自主式水下航行器 autonomous underwater vehicle UAV 集总未知项 lumped unknown function 自构造 selt-constructing 滚动时域控制 moving horizon control MHC 动态矩阵控制 dynamic matrix control DMC 广义预测控制 generalized predictive control GPC 二次规划 quadratic programming QP 线性矩阵不等式 linear matrix inequalities LMIs 模型参考自适应控制 model reference adaptive control MRAC 模型识别自适应控制 model identification adaptive control MIAC 递归预测误差方法 recursive prediction error 自适应神经网络 adaptive neural network ANN 反向传播 back propagation BP 粒子群优化算法 particle swarm optimization PSO 未知输入观测器 unknown input observer UIO 自抗扰控制器 active disturbance rejection controller ADRC 加权 LS-SVM weighted LS-SVM 四分位距 interquartile range 单输入单输出 single-input-single-output SISO 零阶保持器 zero-order holder ZOH - optimization programming language OPL


XI
表II 主要变量对应表
变量名 物理含义 变量名 物理含义 x x 轴坐标 y y 轴坐标 {n} 惯性坐标系 {b} 附体坐标系 u 附体坐标系纵向速度 v 附体坐标系横向速度 m 质量 Iz 绕 z 轴惯性矩 X 作用在附体坐标系 x 轴的力 Y 作用在附体坐标系 y 轴的力 N 附体坐标系 x 轴上的力 F 水动力 δ 舵角 r 首摇角速度 fu 前进力 fv 横漂力 tr 首摇力矩 M 惯性矩阵 MRB 刚体惯性矩阵 MA 附加质量矩阵 C 离心力矩阵 CRB 刚体离心力矩阵 CA 附体坐标系旋转离心力矩阵 τ 系统输入力和力矩矢量 D 阻尼矩阵 w 测量噪声矢量 τd 干扰力和力矩矢量 τwind 风干扰力和力矩矢量 τcurrent 水流干扰力和力矩矢量 τwave 波浪干扰力和力矩矢量 η 惯性坐标系位置矢量 ψ 船首向
K ,T Nomoto 模型参数 T1,T2,T3 Nomoto 模型参数 TE,KE 舵机模型参数 Vc 水流速度大小 βc 水流速度惯性坐标系方向 d0 Nomoto 模型干扰或建模误差 n 螺旋桨转速 x 系统状态 u 系统输入 y 系统输出 RLOS LOS 接纳圆半径 e 误差
θ 支持向量机系数矩阵 b 支持向量机偏置 fd 集总干扰 xf 扩张系统状态 NP MPC 预测步长 NC MPC 控制步长 J MPC 目标函数 Ts 控制周期 Q, R 目标函数权重矩阵 c 常数


XII
表III 下标含义
下标 含义 G 重心
C 船舶中心
u,v,r 一阶泰勒展开
uu,vv,δδ,vu,ru,δu,vδ,rr 二阶泰勒展开 uuu,vvu,rru,δδu,vru,vδu,rδu,δδδ,vvr,vvδ,vrδ,rrr,δuu,ruu 三阶泰勒展开
H 船体
P 螺旋桨 R 舵(参考) RB 刚体
A 附加质量
wave 波浪 current 水流 wind 风
u,v,r 前进、横漂、首摇 d 干扰
r 相对值
min, max 最小, 最大
c 水流 P,I,D PID 参数
SAE 离散跟踪误差 P 预测步长 C 控制步长 E 舵机模型


1
第 1 章 绪论
1.1 引言
国际与国内贸易量的日益增加对交通运输的效率、安全与节能提出了新的
挑战,航运作为一种重要的贸易运输方式,如何提高其运输载体——船舶—
的智能化水平是亟待解决的关键问题[1]。无人化是船舶智能化的重要特征之一。
船舶人力的减少一方面可以节约宝贵的船体空间、降低运营成本,另一方面可
以有效降低甚至避免人为因素造成船舶事故的发生。近年来,无人机、无人车
等载运工具的研究与应用使船舶无人化也受到了科研机构、船舶公司和政府越
来越多的关注。本文将这类无人化水面船舶统称为无人船(unmanned surface
vehicles, USV)。
虽然当前船舶自动化水平较高,但船舶的正常运行始终离不开人的参与[2]。
即使是无人值班机舱,当有紧急情况发生时仍需要船员来处理。船舶驾驶虽有
卫星导航、电子罗盘、电子航道图和自动舵的辅助,但驾驶台还未完全实现无
人化。船舶无人化不仅能提高船舶的自动化和智能化水平,还能减少船舶发生
危险的风险。据统计,在船舶碰撞事故中,89%~96%的事故可归结于人自身的
原因,包括明显的和潜在的原因[3]。近年来,人工智能、通信传感技术的快速发
展使 USV 吸引了更多的目光。从用途上划分,USV 研究已经覆盖了军用、海洋
测绘、水质监测、海事巡航、远洋和内河运输等多个行业;从方法和技术角度
划分,USV 研究主要集中于能源保障、避碰避险、环境感知、路径规划和航迹
控制等方面。传统意义上的 USV 指的是船舶端的无人化航行,具备自主航行和
远程遥控能力的船舶都属于 USV 的范畴。本文所指的自主航行是指 USV 在完全
没有人参与的情况下自动完成航行任务(包括航线规划、避障、进出港等)。
实际上,远程控制的 USV 早在二战时就已经应用于攻击敌船,在技术上已经比
较成熟[4]。但自主航行的 USV 目前仍处于研究阶段,关键的理论和技术问题还
有待解决。通常来说,USV 自主航行系统可分为航行感知子系统、路径规划子
系统和运动控制子系统,三者的相互关系如图 1-1 所示。环境感知是对 USV 自
身状态、外界环境、障碍物的获取和识别,涉及模式识别、信息融合等理论;
路径规划是根据环境障碍物信息、目标路径点实时动态求解最优路径,涉及最
优化等理论;运动控制是根据已规划好的航线自动操控螺旋桨和舵机,在外界
干扰存在情况下保证 USV 安全、可靠、准确地完成航行,涉及船舶动力学建模、


2
自动控制等理论。
图 1-1 USV 自主航行系统组成
设计一种精确、可靠的运动控制器是实现 USV 自主航行的关键。船舶在航
行过程中由于受到外界环境和自身系统不确定性影响,会导致船舶真实的控制
效果和预设的不一致,这在 USV 运动控制中尤为明显。比如,水流、风、波浪
会使 USV 运动控制性能变差,同时操纵性也会因船速、航行水深、载重量的变
化而改变,一个有经验的驾驶员可通过调整操船策略或方式来应对这种变化,
但对于无人驾驶的 USV,如果不能根据外界环境对运动控制进行相应调整,则
很难实现精确的航迹控制,也增大了 USV 的航行风险。再考虑到大部分船舶都
是欠驱动方式推进的(没有侧推器),以及船舶固有的时滞、大惯性等特点,
USV 运动控制一直以来受到了学者的重视和关注。虽然目前已建立了比较完善
的船舶水动力模型,也尝试了多种运动控制方法,取得了一些的成果,但是如
何提升 USV 运动控制的精度、可靠性和实时性一直是亟待解决的关键问题。
根据上述分析,本文尝试解决无人船运动控制中的以下具体问题:(1)无
人船运动控制中因模型或参数改变造成的运动控制精度下降的问题;(2)无人
船运动控制中因某些状态或干扰不可测造成的运动控制精度不高的问题;(3)
MPC 在船舶运动控制中的实时性问题。USV 运动控制主要涉及两种控制形式
—轨迹跟踪(trajectory tracking)控制和路径跟随(path following)控制。路径
跟随控制只要求 USV 的航迹能跟踪上计划航线,并没有时间维度上的约束或要
求;轨迹跟踪控制则要求 USV 实时跟踪时变的参考轨迹,也就是参考轨迹是时
间的函数。前者是几何位置跟踪,后者是动态轨迹跟踪[5-6]。路径跟随和轨迹跟
踪对于 USV 的欠驱动、非线性、系统不确定、不可观测性等问题的处理是一致


3
的[7],因此本文用路径跟踪控制统一描述这两种控制方式。针对 USV 运动控制
问题,本文利用模型预测控制(model predictive control, MPC)、视距(line-of
sight, LOS)导航、最小支持向量机(least squares support vector machines, LS
SVM)、扩张状态观测器(extended state observer, ESO)等方法对 USV 运动控制展
开研究,旨在解决 USV 运动控制中由于环境干扰影响、模型参数改变、参数和
干扰不可测等导致的运动控制精度不高或可靠性不高等问题。
1.2 USV 路径跟踪控制现状
为解决船舶路径跟踪控制问题,早在 20 世纪 20 年代就研发了机械式的自动
舵装置,自动舵能在无人操控的情况下保持船舶航向基本不变,后来又逐步发
展为比例-积分-微分(proportional–integral–derivative, PID)自动舵、自适应自动
舵、智能舵等[8]。从目前来看,虽然在某些情况下自动舵能够替代人来操控船舶,
但是在复杂或者不确定性环境下,自动舵往往无法满足需求。比如,在内河环
境下,由于航道较窄、曲折,水深变化明显,上下行分航,风、浪、流干扰等
原因,传统的自动舵很难达到相应控制需求;目前的自动舵也无法自主完成停
泊、进出港等操作。为解决这一问题,国内外学者开展了不少研究,也提出了
相应的运动控制方法。首先介绍目前常用的船舶路径跟踪控制方法,再具体分
析自适应控制在船舶路径跟踪控制中的应用,最后简要介绍了视距导航在路径
跟踪中的应用概况。
1.2.1 路径跟踪控制方法
在全球定位系统(global positioning system, GPS)出现之前,自动舵只能进
行航向控制,无法实现路径跟踪控制[9]。GPS、北斗等全球导航卫星系统的普及
以及差分定位技术的成熟,使满足 USV 自主航行需要的精确路径跟踪控制成为
了可能。船舶路径跟踪控制方法也从最早的 PID 逐步发展到了最优控制、滑模控
制、模型预测控制和人工智能控制等复杂算法。
1.2.1.1 最优控制
最优控制是变分法的一种扩展,是由 20 世纪 50 年代空间技术推动和发展的。
美国学者 Bellman 提出的动态规划方法和前苏联学者 Pontryagin 提出的极大值原
理对最优控制的最终形成发挥了重要 作用。线性二次高斯(linear quadratic


4
Gaussian, LQG)控制问题是最优控制中最典型的问题,通过状态估计建立二次
成本函数,求解得到最优控制律[10]。Holzhuter 等应用前馈控制、基于 LQG 的反
馈控制,以及卡尔曼滤波实现了船舶航迹控制,但所研究的模型比较简单[11-12]。
Cimen 面向大型油轮非线性带约束的运动控制问题,提出了一种通过求解状态相
关 Riccati 方程得到最优控制律的非线性最优控制方法,并通过大量真实实验验
证 了 该 方 法 的 有 效 性 [ 13 ] 。 与 文 [13] 不 同 , 胡 洲 等 提 出 了 一 种 无 须 求 解 非 线 性
Riccati 方程的最优控制方法,并将该方法用于船舶的航迹跟踪控制,仿真结果表
明在一定的外界环境干扰存在时仍具有较好的控制效果[14]。彭秀艳等提出了一
种用于船舶航迹控制的 LQG 随机控制方法,在该方法中利用卡尔曼滤波器实现
了对航向角、舵角、船位的最优估计,仿真结果表明该方法具有较高的控制精
度[15]。涂武为解决船舶运动中自动舵的波动和可靠性问题,在构造控制最优目
标函数时考虑自动舵相关约束,并基于此提出了一种考虑舵机性能的非线性最
优控制器[16]。
1.2.1.2 变结构(滑模)控制
变结构控制(variable structure control, VSC)是一种非连续非线性控制方法,
其反馈控制律不是时间的连续函数,控制律的结构是根据状态轨迹位置的变化
而改变,即控制律可以从一个“滑动模态”切换到另一个“滑动模态”。考虑
到控制律结构的不确定性,通常也将 VSC 称为滑模控制(sliding-model control,
SMC)。Ashrafiuon 等较早尝试将 SMC 方法用于解决参数不确定条件下的欠驱
动船舶的鲁棒跟踪控制问题,具体是以船舶纵向位置跟踪偏差作为一阶滑模面,
以横向轨迹位置偏差作为二阶滑模面,在保证船舶旋转运动有界的情况下完成
位置跟踪[17]。McNinch 等应用非线性预测控制方法设计了滑模控制的最优滑模
面,使得船舶在跟踪过程中能保证最小的跟踪误差或者最低的能量消耗[18]。Liu
等提出了一种基于神经网络和分层滑模控制的船舶轨迹跟踪方法,其中神经网
络用于逼近系统未知非线性函数,这样控制器的鲁棒性问题和滑模控制的颤动
问题都得到了有效解决[19]。Liao 等基于反步法(Backstepping)和动态滑模控制
方法提出了一种自适应滑模控制器,该控制器在考虑模型误差和外部干扰时可
以实现船舶路径跟踪控制[20]。Valenciaga 针对无人驾驶船舶路径跟随控制问题,
设计了一种基于 Lyapunov 和高阶滑模控制方法的控制器,该控制器既有效避免
滑模面的抖振问题又减少了计算负担[21]。
张戎军等利用伪线性化变换将船舶非线性操纵运动模型线性化为可控正则


5
型,并针对线性化后的操纵运动模型提出了一种连续的变结构控制方法,有效
提高了控制系统的鲁棒性,在限制水域船舶纠偏控制中有较好的效果[22]。卜仁
祥等为解决带有横向漂移以及非完整约束的船舶航迹控制问题,提出了一种基
于分解迭代非线性滑模的增量反馈控制器,在不对模型不确定性参数或环境干
扰进行估计的情况下可以实现航迹的稳定控制,仿真实验表明控制器具有较强
的鲁棒性[23-24]。廖煜雷等设计了一种基于滑模控制方法的无人船轨迹跟踪控制
律,该控制律可以同时保证控制的渐进稳定性和首摇运动的有界输入有界输出
稳定性[25]。
1.2.1.3 反馈线性化
反馈线性化(feedback linearization)方法在非线性系统控制问题中应用广泛,
是通过对系统状态量的非线性变换和非线性反馈将非线性系统转换为等价的线
性系统,从而简化了非线性系统的控制问题[26]。Tzeng 等设计了一种考虑舵机极
限位置和转动速率约束的反馈线性化自动舵设计方法[27]。Pettersen 等针对路径点
跟踪控制问题,提出了一种以首摇扭矩为输入、基于全状态反馈线性化和级联
控制技术的跟踪控制方法,该方法能保证船首向和路径跟踪偏差的收敛性[28]。
Encarnacao 等研究了定常未知水流下 USV 的路径跟随控制问题,提出了一种基
于 Lyapunov 理论、反馈线性化和 Backstepping 技术的路径跟随控制器,在水流
干扰下能保证船舶跟踪上预设路径[29]。随后,Encarnacao 等又将该方法应用于自
主式水下航行器(autonomous underwater vehicle, AUV)三维路径跟随控制中[30]。
Paliotta 等借鉴了无人驾驶车轨迹跟踪中“hand point”的概念,提出了一种基于
输入输出反馈线性化的轨迹跟踪控制方法,并利用 Lyapunov 稳定性理论证明了
该方法的几乎全局渐进稳定性(almost-global asymptotic stability)[31]。
李铁山等运用输入输出线性化方法设计了一个具有渐进跟踪能力的控制律,
实现了船舶的直线轨迹跟踪控制[32]。之后,李铁山等在原有输入输出线性化方
法的基础上,通过重定义输出变量提出了一种状态反馈控制律,能够使船舶轨
迹渐进镇定于参考航迹[33]。与文[33]类似,周岗等针对船舶直接航迹控制问题,
基于输入输出线性化方法也设计了一种全局渐进稳定的控制律,取得较好的控
制效果[34]。石为人等在建立包括舵机特性的船舶航向控制非线性模型的基础上,
通过反馈线性化方法将该非线性模型转换为可控的线性模型,并基于此设计了
动态滑模控制器[35]。
1.2.1.4 智能控制


6
考虑到船舶运动控制系统具有非线性、干扰、不确定性、时变等特点,单
纯设计某一种控制律通常很难满足精确路径控制的需求,而由于智能控制算法
(比如神经网络、遗传算法、模糊逻辑等)具有系统参数自整定功能,因此可
以尝试用于解决复杂的船舶运动控制问题。Burns 考虑到利用卡尔曼滤波器进行
船舶运动模型参数辨识时可能需要耗费较多的计算量,提出了一种基于神经网
络的辨识方法,并与最优控制方法联合实现了船舶的智能最优控制[36]。Zhang 等
提出了一种单输入多输出神经网络控制器,该控制器能够同时消除跟踪误差和
船首向误差,且神经网络采用的是一种“无教师”的在线学习方式[37]。Velagic
等提出了一种用于船舶航迹控制的自适应模糊增益自动舵,该自动舵是由两个
反馈回路组成,一个是常规的模糊控制反馈回路,另一个是可以调整模糊控制
反馈参数的反馈回路,该自动舵对外界干扰、模型不确定性均有较强的鲁棒性
[38]。Yang 等针对不确定船舶运动非线性系统提出了一种模型参考自适应鲁棒模
糊 控 制 方 法 , 其 中 模 糊 逻 辑 算 法 用 于 估 计 舵 机 系 统 的 集 总 未 知 项 (lumped
unknown function),Lyapunov 方法用于设计控制律,该自适应控制方法能够实
现跟踪的渐进稳定[39-40]。Wang 等提出了一种自构造(self-constructing)自适应
鲁棒模糊神经网络控制器,以实现在干扰和不确定性条件下对水面船舶的路径
跟踪控制,其中自构造模糊神经网络用于估计系统干扰和不确定性,滑模控制
方法和自构造模糊神经网络方法相结合来设计相应自适应控制器[41]。
与文[37]类似,程启明等也提出了一种在线单输入多输出的神经网络控制器
以用于船舶的航迹保持控制,通过控制舵角输入同时消除了航迹偏差和航向偏
差[42]。周岗等基于模糊控制方法将船舶的航向控制的模糊规则扩展到航迹控制
的模糊规则,以此设计的模糊控制器具有较好的转向动态性能、航迹保持性能
和抗干扰性能[43];后来又研究了利用神经网络对船舶航迹控制模型非线性环节
进行模糊线性化的方法[44]。张雅妮等利用粒子群算法在线优化模糊 PID 自动舵
参数,仿真试验表明具有较好的控制效果[45]。
1.2.1.5 Backstepping 算法
Backstepping 算法在每一步把状态坐标的变化、不确定参数的自适应调节函
数和一个已知的 Lyapunov 函数的虚拟控制系统的镇定函数等联系起来,通过逐
步修正设定轨迹与实际轨迹之间的偏差,实现系统的全局调节或跟踪。Godhavn
等针对时变航速和波浪条件下的路径跟踪控制问题,提出了一种自适应
Backstepping 船舶跟踪控制方法,在保证收敛性的同时能够有效解决非线性运动


7
模型中惯性矩阵不对称的问题[5]。Pettersen 和 Nijmeijer 针对欠驱动船舶的运动跟
踪控制问题,提出了一种基于积分 Backstepping 方法和平均法的运动控制器,该
控制器能够保证在邻域内参考轨迹的稳定性[46-47]。Skjetne 等为实现曲线路径的
跟踪控制引入了 Serret-Frenet 框架,并基于加速度反馈技术和 3 步 Backstepping
方法设计了路径跟随控制器[48]。Do 等基于状态和输出反馈设计了欠驱动水面船
舶的路径跟随控制器,该控制器具体是利用 Lyapunov 直接法和 Backstepping 方
法来进行控制律设计[49]。后来,为解决路径跟随控制器的鲁棒性问题,在原有
控制器的基础上利用 Lipschitz 参数投影来估计系统不确定参数,在外界环境干
扰下验证了所提出控制器的鲁棒性[50];再后来,为解决确定或随机海况下的路
径跟随控制问题,又提出了一种基于 Lyapunov 直接法、Backstepping 方法和非线
性 Lyapunov 方程的路径跟随控制器[51]。
李铁山等基于 Backstepping 设计思想和耗散理论,提出了一种鲁棒全局状态
反馈控制算法,该算法在风、浪、流干扰下可以保证欠驱动船舶全局最终镇定
到某一条直线上[52];后来,基于 Lyapunov 稳定性理论,又将 Nussbaum 增益技
术融入 Backstepping 设计之中,并提出了一种鲁棒自适应模糊控制直线航迹跟踪
控制算法,并保证了闭环系统的一致有界性[53]。张国庆等在 Backstepping 方法基
础上利用非线性函数逼近技术实现了对模型不确定因素的补偿控制,基于此设
计了鲁棒自适应路径跟踪控制器,其中非线性逼近是通过神经网络在线学习得
到的,该控制器能够解决欠驱动船舶在路径跟踪控制中由于不确定性和外界环
境干扰引起的路径跟踪控制精度不高的问题[54]。
1.2.1.6 模型预测控制
模型预测控制,通常也称为预测控制,在 20 世纪 80 年代最早应用于化工、
原油提炼等领域的过程控制中,是一种先进过程控制方法,但近年来在电力系
统控制、交通管理、运动控制等实时控制领域也被广泛研究和应用,并取得了
很多成果。MPC 又称为滚动时域控制(moving horizon control, MHC)、动态矩
阵控制(dynamic matrix control, DMC)、广义预测控制(generalized predictive
control, GPC)等,是一种反馈控制策略[55]1-6。MPC 是在每一个采样时刻,根据
获得的当前测量信息,在线求解一个有限时域开环优化问题,并将得到的控制
序列的第一个元素作用于被控对象;在下一个采样时刻,重复上述过程,用新
的测量值刷新优化问题并重新求解。因此,MPC 具有模型预测、滚动优化和前
馈-反馈控制结构等特点。在线求解开环优化问题获得开环优化序列是模型预测


8
控制和传统控制方法的主要区别。近年来,MPC 越来越多地被用于船舶运动控
制领域,并取得了一些的成果。
胡耀华、贾欣乐基于广义预测控制研究了欠驱动船舶的直线航迹控制问题,
对存在滞后、约束和不确定性的非线性船舶航迹控制系统取得了有效的控制效
果[56]。Yan 等在不考虑外界干扰的情况下,针对 MPC 中的二次规划(quadratic
programming, QP)求解困难的问题,提出了一种基于递归神经网络(recurrent
neural networks, RNN)快速求解最优值的方法,在提高算法实时性的同时完成了
欠驱动船舶对目标轨迹的跟踪[57]。Li 等考虑舵机执行器饱和约束和运动速率约
束的条件下利用 MPC 实现了对四自由度船舶的跟踪控制[58]。Liu 等考虑输入控
制约束情况下利用基于线性矩阵不等式(linear matrix inequalities, LMIs)的非线
性模型控制方法(nonlinear model predictive control, NMPC)实现了欠驱动船舶的
运动控制[59]。Oh 等在欠驱动船舶跟踪轨迹过程中先利用视距导航产生目标轨迹,
再应用 MPC 实现对目标轨迹的跟踪[60]。Wang 等通过将解析模型预测控制
(adaptive analytic model predictive)与非线性观测器相结合提出了一种鲁棒路径
跟踪控制器,能使欠驱动船舶实现对参考路径的跟踪[61]。
1.2.1.7 各种方法的优缺点分析
通过查阅文献,总结了当前适合无人船路径跟踪控制的几种典型方法,他
们各自优缺点对比如表 1-1 所示。 表 1-1 船舶路径跟踪控制方法优缺点对比 方法类型 主要优点 主要缺点 最优控制 1可以处理约束;2目标函数中可以明 确控制目标。
1对模型精度要求比较 高;2最优控制问题的 解析解通常比较复杂。 变结构控制 1快速响应;2对参数变化和扰动不灵 敏。
抖振问题难以消除。
反馈线性化 简化了控制问题。 1 非 线 性 控制 律 比 较 复 杂;2对模型精度要求 比较高[62]。
智能控制 可以处理复杂的非线性、干扰、不确定 性、时变等控制问题。
通常难以定义控制目 标。 Backstepping 1能保证闭环系统的稳定性;2取消了 系统不确定性需满足匹配条件的约束。
存在 Lyapunov 函数难以 设定的问题。 模型预测控制 1可以显示处理多变量约束优化控制问 题;2可以处理时变或者非时变、线性 或者非线性、有时滞或者无时滞的系统 的约束最优控制问题[55]2-3。
非线性优化问题求解速 率较慢,在实时控制中 难以满足实时性需求。
需要指出的是,表 1-1 中提到的优缺点仅是针对单一方法存在的一些共性特


9
征进行描述的,实际上在具体应用某种方法时通常有相应的改进以克服这些缺
点,且几种方法融合使用也十分常见,比如文[41]中的方法。因此,很难通过单
一比较说明哪一种方法具有绝对的优势,一般是针对某种具体问题选择一种合
适的控制方法。USV 运动系统具有时变、非线性、时滞、约束等特征,考虑到
MPC 具备的前馈-反馈特性、自适应能力强等优点,以及能解决其他控制方法不
易解决的多变量约束问题,如果 MPC 的实时性问题能够得以解决,那么 MPC 应
该是解决 USV 运动控制问题较好的选择之一。
1.2.2 自适应控制方法
由于 USV 运动模型的结构、参数和环境干扰经常发生变化,常规的反馈控
制、前馈控制手段很难达到较满意的控制效果,自适应控制可以在一定程度抵
消模型变化带来的影响,使运动控制达到较好的效果。自适应控制是一种对系
统参数变化具有适应能力的控制方法,典型的应用场景是飞机越洋飞行时由于
燃油消耗而造成控制模型改变,自适应控制能够辨识这种模型“变化”,使控
制性能基本保持不变,而传统方法很难应对这种改变。自适应控制通常可分为
两种类型,一种是直接自适应控制,另一种是间接自适应控制。直接自适应控
制是根据外界扰动直接调整控制器参数,间接自适应控制是通过在线辨识更新
模型参数,再根据更新后的模型调整控制器[63]。
(1)直接自适应控制
直接自适应控制通常是基于 Lyapunov 稳定性推导得到的直接自适应控制律。
模型参考自适应控制(model reference adaptive control, MRAC)是一种典型的直
接自适应控制方法,由 Whitaker 等在 1958 年首先提出[64]。MRAC 原理如图 1-2
所示。参考模型是系统的理想模型,通过综合考量参考输出与系统输入、系统
输出得到控制器调节参数,该参数用来自主调节控制器,使得系统输出更快更
稳定地跟踪目标值。直接自适应控制可以从数学上保证控制的收敛性,但对于
非线性系统,往往很难设计出合适的控制律以满足稳定性需求。


10
图 1-2 MRAC 的工作原理
(2)间接自适应控制
模型识别自适应控制(model identification adaptive control, MIAC)是在系统
运行时进行系统识别,利用系统识别的结果来调整系统,是一种典型的间接自
适应控制。MIAC 的工作原理如图 1-3 所示。由于系统干扰(包括外界环境和内
部参数改变)的存在,系统真实输出与理想输出通常存在偏差,系统辨识方法
能够根据系统输入和输出辨识得到系统的真实参数,通过调节机构将更新的参
数“反馈”给控制器。
图 1-3 MIAC 的工作原理
系统模型辨识的准确性对间接自适应控制效果有直接影响,随着神经网络、
支持向量机、遗传算法等智能识别方法的日渐成熟,间接自适应控制的应用也
越来越广泛。以下具体说明系统辨识方法的研究进展。
1.2.2.1 系统辨识方法
系统辨识和控制理论是互相关联、密不可分的[65]。在控制过程中不能脱离
被控对象的数学模型,然而在很多情况下并不知道被控对象的数学模型,或者
在控制过程中对象参数可能发生变化,因此当需要将控制理论应用于现实中时,
首先应对被控对象进行建模[65]。系统辨识(估计)是研究建立系统数学模型的
过程,已广泛应用于许多科学和工程领域,如化工过程、电力系统、航空航天、


11
船舶控制、社会经济系统、生物生态系统等[66]。系统辨识方法按其属性特征可
分为最小二乘估计算法、梯度估计算法、随机逼近估计算法、递阶辨识方法、
极大似然辨识方法、贝叶斯辨识方法、支持向量机方法、神经网络方法等;按
其辨识的模型类别可分为机理辨识方法(白箱法)、实验辨识方法(黑箱法)
和介于两者之间的灰箱法;按其实时性可分为在线辨识方法和离散辨识方法[66
67]。对于自适应控制,应选择实时性较好的在线辨识方法。
船舶运动数学模型描述了船舶在运动过程中系统输入(舵角、螺旋桨转速)
与系统输出(速度、位置、加速度)的关系。因此,建立精确的船舶运动数学
模型是设计运动控制器的基础[68]。利用系统辨识获取船舶运动数学模型的一般
过程见如图 1-4[47]。
图 1-4 船舶运动数学模型辨识过程
在国外,Hayes 早在 1971 年就利用模型参考方法辨识了 Abkowitz 模型中的
水动力参数[69]。1976 年,Äström 等又提出了一种船舶舵机响应模型参数辨识的
方法,具体是将离散测量数据作为模型辨识数据,并利用极大似然法估计模型
参数[70]。1982 年,Amerongen 使用直接模型参考自适应方法来辨识舵机响应模
型参数,基于此提出了一种自适应自动舵控制器[71]。1983 年,Salid 等提出了一
种递归预测误差方法(recursive prediction error)用于在线模型参数辨识[72]。类
数据采集、存
储及预处理 辨识方法辨识
模型集不合适
实验数据无效
明确辨识目的
实验设计
收集先验知识
模型集选择
模型检验
模型正确
输出模型
开始辨识


12
似地,1989 年,Zhou 等将线性回归预报误差法用于非线性状态空间模型的辨识
[73]。2005 年,Casado 等针对 Nomoto 二阶模型的六个参数辨识提出了一种基于船
舶回转测试和 Backstepping 的非线性辨识方法[74]。
在国内,由于我国在船舶自动化的工作起步较晚,船舶模型辨识相关研究
较少。林莉等针对船舶运动的特点,提出了 2 种不同的神经网络模型用于船舶运
动数学模型辨识[75]。徐孟等提出一种基于多局部种群遗传算法的船舶参数辨识
算法,该算法用于辨识 K-T 模型参数,并能保证参数辨识的收敛性和全局优化能
力[76]。戴运桃等针对横向水动力参数多、参数间耦合度高的特点,给出一种计
算参数敏感系数的方法,并依据敏感性系数对参数进行了分类,采用分阶段粒
子群优化算法对参数进行辨识[77]。
船舶运动模型系统辨识方法主要包括最小二乘法、扩展卡尔曼滤波法等传
统辨识方法,以及人工神经网络法、支持向量机和粒子群优化算法等智能辨识
方法。
(1)最小二乘法
秦余刚等为解决船舶操纵性参数辨识问题,基于 P 型学习率提出了改进递推
最小二乘法,实现了船舶操纵一阶和二阶非线性运动响应模型[78]。李光磊等针
对船舶 K-T 模型的参数辨识,提出了一种结合最小二乘法和间接模型参考自适应
法的混合辨识算法[79]。曹包华根据模型参考自适应方法和遗忘因子最小二乘法
对船舶运动模型(K-T 模型和运动状态模型)进行了参数辨识[68]。
(2)扩展卡尔曼滤波
Abkowitz 于 20 世纪 80 年代较早地应用扩展卡尔曼滤波辨识方法提出了针对
Abkowitz 模型水动力导数的辨识方法,并利用 Esso Osaka 油轮试验数据验证了
该辨识方法的有效性[80]。任光等提出了一种多模型卡尔曼滤波器,能够在模型
参数突变的情况下实现船舶运动模型的参数辨识[81]。赵大明等提出了一种扩展
卡尔曼滤波算法的船舶运动模型参数辨识方法[82]。丁彦侃等提出了一种并行扩
展卡尔曼滤波的船舶模型参数辨识方法,该方法提高了辨识效率[83]。
(3)支持向量机
支持向量机(support vector machines, SVM)是在统计学习理论的基础上发
展起来的新一代学习方法[84]。作为一种先进人工智能技术,SVM 在人工智能和
工程领域已经获得大量应用,而在船舶控制领域 SVM 还处于初步应用阶段。
Wang 等提出了一种基于在线最小二乘支持向量机和自适应神经网络(adaptive
neural network, ANN)的自适应跟踪控制算法[85]。Xu 等针对水下机器人的非线


13
性模型辨识问题提出了一种基于 SVM 的参数辨识方法,该方法用于辨识水下机
器人模型的阻尼矩阵、离心力矩阵等参数[86]。
虽然国内利用 SVM 研究船舶运动控制的相关文献较少,但还是取得了一些
成果。国内上海交通大学的邹早建、罗伟林和张心光等较早地开展了基于 SVM
的船舶运动建模研究。罗伟林等通过对舵角、漂角、首摇角速度等试验数据的
分析,利用最小二乘支持向量机方法辨识船舶操纵运动模型中的水动力导数及
其干扰力系数,通过与实船数据进行对比,验证了该辨识方法的有效性[87]。张
心光针对船舶操纵性试验分析过程中出现的非线性问题,应用 ε-SVM 和神经网
络对模型中的非线性函数关系进行辨识研究,通过仿真验证了该方法在辨识
Abkowitz 模型的有效性[88]。
SVM 的主要优点为:(1)以结构风险最小化准则进行学习,同时考虑了经
验风险值和置信范围,具有较好的泛化性;(2)由于 SVM 建立的是一个凸规划
问题,能够保证解的全局最优性。
(4)神经网络法
神经网络法通常用于船舶运动模型的黑箱建模,即用神经网络结构代替操
纵运动数学模型。Ebada 等应用反向传播(back propagation, BP)神经网络开展
了回转操纵性能预报研究[89]。刘祖源等应用 BP 神经网络对 Nomoto 响应模型中
的 K、T 指数进行了预报研究[90]。张孝双等根据动态神经网络通过学习能以任意
精度逼近非线性函数的特性,建立了用于船舶运动极短期预报的对角回归网络
(DRNN)模型及算法[91]。乐美龙深入分析了 BP 神经网络的非线性映射数学机
理,确定了针对船舶操纵性问题的计算模型,实现了对 Z 形和回转操纵性能的预
报[92]。杨雪晶等以某水面舰艇为研究对象,利用径向基函数神经网络算法和标
况下的水池实验数据,建立了考虑航速、外界环境和航向角变化的船舶运动非
线性参数模型[93]。
神经网络先天性缺陷主要表现在两个方面:一是神经网络算法是基于经验
风险最小化准则的算法,这种方法的泛化能力差,容易出现过拟合现象和维数
灾难问题;二是易于陷入局部极值。
(5)粒子群优化算法
粒子群优化算法(particle swarm optimization, PSO)是 20 世纪 90 年代提出
的一种通过模拟鸟群觅食行为而发展起来的群智能优化算法,逐渐引起了相关
领域学者的广泛关注[94]。戴运桃利用 PSO 算法实现了对船舶横向运动模型和纵
向运动模型参数的辨识,通过仿真试验验证了 PSO 辨识方法的性能[95]。孟非等


14
提出了一种基于粒子群优化算法的船舶纵摇运动参数辨识方法[96]。需要注意的
是 PSO 算法容易陷入局部最优。
1.2.2.2 船舶自适应运动控制
自适应自动舵很早就成功应用于实船舵机系统,是自适应控制在船舶运动
控制中的典型应用。随后很多学者尝试将自适应控制方法应用在船舶航向控制、
航迹控制中,并取得了不少成果。汪洋等针对船舶航向控制中模型参数变化引
起 的 控 制 不 确 定 性 问 题 , 提 出 了 而 一 种 基 于 动 态 神 经 模 糊 算 法 和 PD
(proportional–derivative,比例-微分)控制器并联的船舶航向自适应控制算法,
并在真实集装箱船上验证了该算法的有效性[97]。同样针对船舶航向控制问题,
刘胜等提出了一种基于遗传算法来辨识 PID 参数,当船舶航向角偏差较大时重新
辨识模型,优化 PID 参数,提高原有 PID 算法的自适应性[98]。Zhang 等基于动态
面控制和神经网络等算法提出了一种自适应欠驱动船舶路径跟随控制器,该控
制器能够根据船舶的不确定性自适应调整控制器参数,实现精确的路径跟随控
制[99]。张桂臣等利用反传多层感知器自适应网络建立船舶航迹误差预测模型,
采用舵角、航向、航迹串级回路实现自动舵控制,在模型失配情况下可保证自
动舵具有较好的鲁棒性和动态调节性能[100]。
1.2.3 视距导航算法
USV 自主路径跟踪控制在某种程度上来说是为了达到人来操控船舶的效果,
视距(line-of-sight, LOS)导航某种程度上是人操控船舶的一种体现。在 USV 路
径跟踪控制过程中,只要保证船首向能跟踪上目标 LOS 角,那么 USV 路径就能
逐渐收敛至目标路径。对于具有欠驱动性的 USV 来说,LOS 导航算法能将 3 自
由度(横向、纵向和首摇)转换为 2 自由度的控制(首摇和纵向),大大简化了
控制难度。
经典自动舵一般使用 LOS 导航和 PID 航向控制来实现路径跟踪控制。LOS
算法不仅能用于直线路径的跟踪,也能用于曲线路径的跟踪。McGookin 等[101]和
Fossen 等[102]在基于 LOS 的船舶路径跟踪控制方面做了很多开拓性的工作。随后,
针对 LOS 圆和路径点之前存在没有交点的情况,Moreira 提出了一种可变 LOS 圆
的方法[103]。Oh 等使用了可变的 LOS 前向距离(lookahead distance)获得了更高
的路径跟踪精度[60]。在船舶路径跟踪控制中,Fossen 等利用 LOS 和 Backstepping
实现了欠驱动船舶的路径跟踪控制[102]。Burger 等为实现欠驱动水面船舶列队的


15
路径跟随控制,设计了基于 LOS 和自适应船首向控制的路径跟随控制器[104]。
Pavlov 等基于可变的 LOS 前向距离和 MPC 提出了一种渐进稳定的欠驱动船舶路
径跟踪控制方法[105]。
1.3 USV 状态观测器研究现状
在 USV 路径跟踪控制过程中,航行状态的准确性和实时性对于控制效果有
直接影响,由于受到传感器类型、性能,以及安装费用等限制,一般很难完全
获取 USV 航行过程中所有状态量的实时值。比如,当船舶航行过程中水流速度
不为零时控制效果会变差,而如果能测量到真实水流速度则会改善控制效果,
但不是所有的船舶都因此而安装水流测速仪来测量实时流速。观测器是在实际
控制过程中根据系统输入输出来估计其内部状态的一种系统,通常可分为状态
观测器和干扰观测器。状态观测器是用于估计系统未知状态变量,具有代表性
的有 Luenberger 观测器[106]、卡尔曼滤波估计器[107]、滑模观测器[108]。干扰观测
器是将干扰列入观测状态变量中的一种扩展状态观测器[109],基于干扰观测器的
控制方法综述可参考文[110]。
如果将系统干扰作为一种“状态变量”,那么可将干扰观测器也纳入状态
观测器的范畴。在有些情况下,控制过程中的某些状态变量和干扰变量均不可
知,比如 USV 运动过程中同时需要获取水流和船首角加速度信息,一般的观测
器处理这种情况时具有一定的局限性。未知输入观测器(unknown input observer,
UIO)和扩张状态观测器(extended state observer, ESO)是典型的能够同时估计
未知状态变量和干扰变量的观测器[111-114]。
1.3.1 UIO 观测器
UIO 中的“未知输入”(unknown input)指的是系统未知干扰和不确定项。
Johnson 首次提出了一种同时估计未知状态和干扰的 UIO 观测器,并结合状态反
馈提出了扰动控制方法[111]。此后,UIO 被广泛应用于各种故障诊断中[112,115-120]。
相比于在故障诊断中的应用,基于 UIO 的控制方法研究相对较少。王斌等针对
某种涡扇发动机,通过 UIO 建立了推力估计器,通过解耦外界干扰实现了全飞
行包线推力的准确估计,并基于闭环反馈控制提出了一种具有良好抗干扰性能
的发动机直接推力控制方法[121]。朱芳来等针对具有不匹配未知干扰的非线性系
统,提出了一种基于 UIO 的状态估计和未知输入重构的控制方法[122]。


16
1.3.2 ESO 观测器
1995 年韩京清首次提出了针对某类不确定对象的 ESO 观测器,该 ESO 观测
器中的扩张状态是指在系统原有状态变量的基础上构造的新状态变量,用于估
计系统干扰或不确定项的值[113]。ESO 观测器在自抗扰控制器(active disturbance
rejection controller, ADRC)中的应用最为典型。在 ADRC 中,ESO 用于估计观测
系统中的未知变量和干扰变量,并将系统近似为一个线性系统,该方法不要求
系统具有精确的数学模型,在处理非线性较强或扰动较大系统时具有良好的控
制效果[123]。李荣辉等针对欠驱动水面船舶设计了一种基于 ESO 观测器的路径跟
踪自抗扰控制器,该控制器在外界风流干扰和内部不确定下具有良好的鲁棒性。
不同于其他观测器,ESO 观测器是通过增加状态变量而不是通过减少系统阶数
来进行观测的[124]。除了应用于 ADRC 外,ESO 观测器还能与状态反馈控制、预
测函数控制和滑模控制等方法联合使用,并取得了不错的效果[125-127]。
最初的 ESO 观测器是基于非线性函数形式的,其中观测器的参数整定完全
基于人的经验,这样就会造成在实际应用过程中的不便。针对这一情况,Gao 提
出了一种线性 ESO(linear extended state observer, LESO)观测器,并给出了
LESO 观测器中参数的具体含义和配置方法,使 ESO 的配置更加直观和有效[128]。
同时,Yang 和 Gao 等从理论层面证明了 LESO 观测器在干扰下的观测误差的有
界性,并给出了相应的稳定性依据[129]。考虑到 ESO 或 LESO 都是基于标准积分
串联型的状态空间模型,Li 等提出了一种通用 ESO(generalized extended state
observer)观测器,在一定程度上拓展了 ESO 观测器的应用范围[125]。
1.4 论文的项目来源
本论文的项目来源是:(1)交通运输部科技成果推广项目
(2015326548030):无人航道测量船推广与应用;(2)湖北省自然科学基金
重点项目(2015CFA111):船岸协同下内河船舶智能避碰系统基础理论与关键
技术研究;(3)国家自然科学基金项目(61273234):内河 AIS 数据可靠性与
修复研究。
1.5 论文结构及主要内容
本文利用 MPC、LOS、LS-SVM、ESO 等方法对 USV 运动控制涉及的轨迹


17
跟踪和路径跟随问题开展研究,解决由于环境干扰影响、模型参数改变、参数
和干扰不可测等因素导致的运动控制精度不高的问题。主要内容及章节安排如
下:
第 1 章 绪论。首先论述 USV 运动控制相关的研究背景及意义;其次介绍
USV 路径跟踪控制、自适应控制和 LOS 导航相关的研究现状;最后对 USV 路径
跟踪控制中的观测器研究现状进行分析和描述。
第 2 章 船舶运动数学模型。首先针对 USV 运动控制涉及的运动模型问题,
介绍船舶运动学的基本概念;其次对欠驱动 USV 运动模型(水动力模型和响应
型模型)进行介绍;最后,阐述 USV 运动模型中如何考虑环境干扰和模型不确
定问题。
第 3 章 不确定环境下基于 MPC 的无人船轨迹跟踪控制研究。首先介绍模型
预测控制和轨迹跟踪控制的基本原理;在此基础上,针对不确定环境下带系统
约束的欠驱动 USV 轨迹跟踪问题,分别提出基于线性 MPC 和非线性 MPC 的
USV 轨迹跟踪控制器设计方法,具体包括状态空间模型建立、模型离散化方法、
约束条件设计、目标函数设计等过程,通过仿真实验分析轨迹跟踪控制的效果
并比较线性 MPC 和非线性 MPC 的不同。通过与滑模控制器对比验证基于 MPC
的 USV 轨迹跟踪控制器的控制性能。
第 4 章 基于自适应 LOS 的无人船路径跟随控制研究。首先将二阶非线性
Nomoto 舵角响应模型作为船首向跟踪模型;其次提出一种自适应 LOS 导航算法
以提高路径切换时的跟踪精度;最后提出一种自适应 LOS 和 MPC 的路径跟踪控
制方法,并在环境干扰下对路径跟随的效果进行仿真验证。
第 5 章 模型不确定下基于 LS-SVM 的无人船路径跟随自适应控制研究。首
先介绍基于传统 LS-SVM 的船舶运动参数辨识方法;其次提出一种基于 λ-LS
SVM 的在线参数辨识方法,具体是应用滑动数据窗口实现数据集的在线更新,
设计模型变化指数判断模型是否发生改变,基于输入持续激励方法保证辨识过
程中有足够的激励;再提出一种基于 λ-LS-SVM 和 MPC 的自适应路径跟随控制
方法;最后在仿真实验中,通过设置不同场景来验证 λ-LS-SVM 能否应对 USV
路径跟随过程中自身和外界环境的改变。
第 6 章 含未知状态和干扰时基于 ESO 观测器的路径跟随控制研究。在通用
ESO 观测器的基础上提出连续型和离散型的补偿 ESO 观测器设计方法,并对观
测器的稳定性进行分析,仿真实验从数值结果和 USV 航向控制结果说明该方法
的有效性;基于补偿 ESO 观测器提出 LEM(LOS-ESO-MPC)路径跟随控制方


18
法,在仿真环境下通过与 PID 对比验证 LEM 方法的有效性。
第 7 章 无人船运动控制实验平台验证研究。模型船平台是本课题的真实验
证平台,首先介绍模型船平台的具体构成,然后针对定位问题,提出一种基于
单目视觉的船舶定位算法;其次在模型船实验平台上开展航向控制、自适应
LOS 导航、LEM 路径跟随控制等方法的验证实验,通过对实验结果的分析,说
明本课题所设计的路径跟踪算法在真实船舶运动控制中的有效性与可靠性。
第 8 章 总结本文的研究成果,并对本文存在的问题和未来可能继续研究的
方向进行展望。
各章节之间的关系详见图 1-5。
无人 水面船 运动控 制
轨迹跟踪控制 路径跟随控制
第3章
解决不确定环境下带 系统约束的路径跟随 控制 问题
第4章
提出了自适应 LOS 导 航算法,提高了路径 跟随 控制的 精度
解决路 径跟随控 制中由于 模型参 数改变而 导致跟踪 精度 不高的 问题
第5章
提出了 在线辨识模 型参数的λLS-SV M方法 ,并结合 M PC提 出了 自适应 路径跟 随控制 方法
解决路径跟随控制中 某些状态参数不可 测、干扰 不可知 问题
第6章
提 出了 补 偿ES O 算 法, 实 现未 知 状态 和 干扰 的 同时 估计 , 并提 出了 LEM 路径 跟随控 制方法
第7章
第12章
运动 模型
真实 实验验 证
基础
现状 分析
第1章
模型 支持
总结与展望 第8章
解决不确定环境下带 系统约束的欠驱动 U SV轨迹 跟踪问 题
仿真 实验验 证
图 1-5 各章节之间的关系


19
第 2 章 无人船运动建模
2.1 船舶运动模型
船舶运动模型一般可分为两类,一类是水动力模型,一类是响应型模型[130]。
其中,水动力模型通常分为整体型模型和分离型模型,包含了各种水动力导数
和干扰系数,一般应用于船舶运动仿真器设计和运动分析。响应型模型描述了
系统输出(首向角(船首向)、首摇角速度等)对系统输入(舵角、螺旋桨转
速等)的动态响应关系,相比水动力模型更为简洁,一般应用于船舶运动控制
器设计和操纵性分析。
2.1.1 运动坐标系
2.1.1.1 船舶运动坐标系
船舶(包含 USV)运动控制是以船舶运动学模型为基础的。船舶运动需由
六个自由度来描述,即:前进(surge)、横漂(sway)、首摇(yaw)、起伏
(heave)、横摇(roll)和纵摇(pitch)。为了定量地描述这六个自由度的运动,
通常采用两种坐标系统:一种是以船舶自身为参考点的附体坐标系,记为
{} ( )
b bb
b = x , y , z ;另一种是以地球为参考点的惯性坐标系,记为{ } ( )
n nn
n = x ,y ,z ,
如图 2-1 所示[131]。
图 2-1 船舶六自由度运动模型


20
为降低船舶运动控制的复杂性,通常仅需要研究船舶在水平面的运动,即
仅考虑前进、横漂和首摇三个自由度,如图 2-2 所示[131]。
图 2-2 船舶三自由度运动模型
2.1.1.2 船舶运动坐标系转换
对于三自由度模型,船舶在附体坐标系{b} 中的前进速度、横漂速度和首摇
角速度分别用 u 、 v 和 r 表示,在惯性坐标系{n} 中的 x 轴位置、 y 轴位置和船首
向分别用 x 、 y 和ψ表示。
定义附体坐标系的速度向量为 [ ]T
v := u v r ,惯性坐标系的位置和船首向
向量为 [ ]T
η:= x y ψ ,于是 v 到η 的转换如下:
()
η = T ψ v (2-1)
其中, ( )
T ψ 是从附体坐标系{b} 速度 v (t ) 到惯性坐标系{n} 速度η 的转换矩
阵,可表示为:
() () ()
() ()
cos sin 0 sin cos 0
0 01
ψψ ψ ψψ
− 

= 

T (2-2)
2.1.2 水动力模型
国内外文献通常将船舶水动力模型分为整体型模型和分离型模型,但从船


21
舶动力学角度来看这两种模型是可以统一的,于是 Fossen 对这两种模型作了一
致的描述,本文称之为水动力统一模型。
2.1.2.1 整体型模型
整体型数学模型主要是指 Abkowitz 模型,是由美国 Abkowitz 教授在 1964 年
提出的,在欧美国家中应用较广。该模型把船、桨、舵看成一个整体,以匀速
直航状态作为平衡点,应用 Taylor 级数将船舶操纵运动方程的水动力表达式展开
并保留到三阶项,从数学角度看比较完整、严密。
由牛顿第二定理,船舶在水平面内的运动方程为:
()
() ()
2 G
G
zG
X m u vr x r
Y m v ur x r
N I r mx v ur
= − −
 = + +
 = + +




(2-3)
式中, m 为船舶质量, Iz 为船体绕船舶附体坐标系 z 轴的惯性矩, xG 为船
体重心在船舶附体坐标系中的纵向坐标; X 、Y 为作用在船舶上的水动力沿附
体坐标系中 x 轴、 y 轴的分量, N 为绕 z 轴的水动力矩分量。
将整个水动力 F (包括惯性类和粘性类)看作为运动量和控制量的函数,
即( )
F = f u, v, r, u, v, r,δ , 并 将 其 在 匀 速 直 航 状 态 下 ( u0 > 0 为 常 数 ,
v0 = r0 =δ0 = u0 = v0 =δ0 = 0

  )以泰勒级数形式展开。通常来说,将泰勒级数展开
到三阶就能满足模型精度要求。对于式(2-3),将 X 、Y 和 N 按照三阶泰勒展
开,进行变换后得到如下 Abkowitz 模型[132]:
( )( )
( )( ) ( )
( )( ) ( )
1
2
3
,,, ,,, ,,,
u
v Gr
Gv zr
m X u f uvr m Y v mx Y r f u v r mx N v I N r f u v r
δ δ δ
 −− += − =
 − + − =





 
(2-4)
式中, Xu 、 Yv 、 Yr 、 Nv 和 Nr 为流体加速度(角加速度)导数或附加质量
(附加惯性矩);状态量可表示为:
u = u0 + Δu, v = Δv, r = Δr,δ = Δδ, u = Δu, v = Δv, r = Δr
   
其中, Δu 、 Δv 、 Δr 为速度(角速度)扰动量, Δδ 为舵角扰动量, Δu 、
Δv 、 Δr 为加速度(角加速度)扰动量。


22
方程组(2-4)右端的函数 f1、 f2 和 f3 为关于速度(角速度)和舵角的非线
性函数,包含了一阶到三阶的水动力导数, f1、 f2 和 f3 可表达为:
() ( )
()
()
2 32 2 2 10 22 2
2 3 33 20
3
,,,
,,,
u uu uuu vv rr G
vr v r vvu rru u
vru v u r u
u uu uuu v r vvv rrr
v
f u v r X X u X u X u X v X mx r X
X m vr X v X r X v u X r u X u
X vr u X v u X r u
f u v r Y Y u Y u Y u Y v Y r mru Y Y v Y r
YY
δδ
δ δ δδ
δδ
δ
δδδ
δδ
δδ δ
δδ
δδ
δ
= + Δ+ Δ + Δ + + + +
+ + + + + Δ+ Δ+ Δ
+ Δ+ Δ+ Δ
= + Δ+ Δ + Δ + + + + + +
++
()
22 2 2 2 2
22 2
2 3 33 30 32 2 2 2
,,,
vr vv vrr rr v r vr
vu ru u vuu ruu uu
u uu uuu v r vvv rrr
vvr vv vrr rr
v r Y v Y vr Y r Y v Y r Y vr
Yvu Yr u Y u Y vu Y r u Y u
f uvr N N u N u N u Nv Nr N N v N r
N N v r N v N vr N r N
δ δ δδ δδ δ
δδ
δ
δδδ δ δ
δ δ δδ δ
δδ
δδ
δ δδ
+ ++ + + +
+ Δ+ Δ+ Δ+ Δ + Δ + Δ
= + Δ+ Δ + Δ + + + + +
+ + + + + +2 2
2
22
vr
vr vu ru G u vuu
ruu uu
v Nr
N vr N v u N r u mx r u N u N v u
N ru N u
δδ δδ
δδ
δ
δδ
δδ
δ
+
+ + Δ+ Δ− Δ+ Δ+ Δ
+ Δ+ Δ
(2-5)
其中, X 0 = 0 , Y0 和 N0 是在 0
u = u 直航状态下因螺旋桨单向转动的不对称
性对船舶造成的横向力和横向力矩。式(2-5)中带下标的 X 、Y 和 N 系数(比
如 Xu 、Yu 等)均为泰勒展开式系数。
2.1.2.2 分离型模型
分离型数学模型是日本数学模型建模小组(ship manoeuvring mathematical
model group, MMG)于 20 世纪 70 年代末提出的,通常也称之为 MMG 模型,在
日本和韩国应用较广。分离型模型可以看成是 Abkowitz 模型的一种简化,更强
调各个水动力导数的物理意义,去掉了一些由约束模型试验结果表明可以忽略
的水动力导数。分离型模型考虑了船、桨、舵之间的相互影响,通过试验较易
获得该模型的水动力导数和船体-桨-舵干扰系数。
分离型模型定义附体坐标系原点在船舶重心 G ,其船舶运动方程为[133]:
() ()
H PR
H PR
z HC H P R HC
m u vr X X X X
m v ur Y Y Y Y
Ir N Y x N N N Y x
− == + +
 + = = + +
 = − ⋅ = + + − ⋅




(2-6)
其中, X 、 Y 和 N 的下标 H 、 P 和 R 分别表示船体、螺旋桨和舵; xC 是船
舶中心在附体坐标系中 x 轴坐标,由于流体动力矩 N 是相对于船舶中心的,因


23
此需要将 N 修正到相对重心的力矩;作用于船体上的流体动力和力矩 X H 、 YH
和 NH 又可以按照性质分为惯性类和粘性类的流体动力和力矩;螺旋桨和舵产生
的力和力矩 X P 、YP 、 NP 、 X R 、YR 、 NR 可通过桨力和舵力模型计算得到。
2.1.2.3 水动力统一模型
虽然模型(2-4)和(2-6)建立的出发点有所不同,但是从船舶动力学的角
度上看都是一致的。Fossen 在总结已有整体型和分离型模型的基础上,提出一种
统一的水动力模型,将船舶受力分为刚体力、流体动力、推进力和干扰力[134]。
假定船舶材质是均匀的且 xz 平面是对称的,则有 0
xy yz
I = I = ,其中 Ixy 和
I yz 是 xy 平面和 yz 平面的惯性矩。在不考虑环干扰的情况下,船舶水动力模型可
表示为:
() () ()
RB A RB A
++ + + =

M v M v C v v C v v D v v τ (2-7)
其中, RB
M 、 ()
CRB v 分别为刚体惯性矩阵和离心力矩阵, A
M、 ()
C A v 分别
为附加质量矩阵和由于附体坐标系旋转产生的离心力矩阵, D (v) 为阻尼矩阵,
τ 为推进力。定义 [ ]
u vr
τ:= f f t ,其中 fu 、 fv 和 tr 分别表示船舶螺旋桨、侧推
器和舵机共同产生的前进力、横漂力和首摇力矩。式(2-7)中的力和力矩可归
类为:
() () ()
RB A RB A
++ +


惯性力:
阻尼力:
推进力:
M v Mv C vv C vv
Dvv
τ
其中:
00
00
RB G Gz
m m mx
mx I

= 


M , 00
00
u
A vr vr
XYY
NN
− 
= −−


−−


 
M
() ( )
()
00
00 0
G
RB
G
m xr v
mu
m x r v mu
 − +

= 
+−

Cv ,


24
()
()
()
1
0 02
00
10
2
v vr
Au
v vr u
Yv N Y r
Xu
Yv N Y r X u

++


=−

−− +


 

  
Cv ,
()
20 0 0 0
u uuu
uu
vr
vv rv vr rr
vr
vv rv vr rr
X X u Xu Y YvYr Y YvYr N NvNr N NvNr

−− −

= −− − −− −

−− − −− −


Dv
其中, u u
X 、 vv
Y 、 rv
Y 、 vr
Y 、 rr
Y 、 vv
N 、 rv
N 、 vr
N 、 rr
N 为水动力学系
数。
式(2-7)通常可简化为:
() ()
++ =

Mv C v v D v v τ (2-8)
A RB
M=M +M 、 ( ) ( ) ( )
RB A
C v =C v +C v 和 ( )
D v 分别是惯性矩阵、离心力矩
阵和阻尼矩阵,具体为:
00
00
u
v Gr Gvzr
m X m Y mx Y
mx N I N
−

= −−


−−


 
M,
() ( ) ( )
()( )
0 0 /2
:0 0
/2 0
G v vr
u
G v vr u
m x r v Yv N Y r
mu X u
m x r v Y v N Y r mu X u
 − ++ + + 

=−

+− − + − +

 

  
Cv
近年来,在船舶运动控制仿真研究中 Fossen 模型应用越来越广泛。
2.1.3 响应型模型
除了水动力模型外,响应型模型在船舶操纵性分析、自动舵等运动控制器
设计中应用广泛。从数学上分析,响应型模型其实是水动力模型的一种简化,
比如线性响应型模型是由线性 Abkowitz 模型推导来的。
对于响应型模型,船首向通常定义为船舶首向(纵轴线方向)与地球正北
方向的夹角,取值范围为 0 ~ 360° ,跟正北方向重合时为 0° ,沿着顺时针方向依
次增大。因此,不同于图 2-2 中对船首向的定义,响应模型中的坐标和运动参数


25
定义如图 2-3 所示。
惯性坐标系{n} 和附体坐标系{b} 速度向量的转换关系为:
sin cos 0
cos sin 0
0 01
xu
yv
rr
ψψ
ψψ
−
 

=
 

 


 

其中, x 、 y 、 r 分别为惯性坐标系下的 x 轴位置、 y 轴位置和 z 轴旋转速
度,ψ为船首向, u 、 v 分别为附体坐标系下 x 轴速度、 y 轴速度。
图 2-3 响应型模型坐标和运动参数定义
常用的 Nomoto 响应型模型可分为线性模型和非线性模型,线性和非线性模
型又都包含一阶和二阶模型,具体为:
一阶线性响应模型为:
Tr + r = Kδ
 (2-9)
一阶非线性响应模型为:
3
Tr + r +αr = Kδ
 (2-10)
二阶线性响应模型为:
()
12 1 2 3
T T r + T + T r + r = Kδ+ KT δ
  (2-11)
二阶非线性响应模型为:


26
() 3
12 1 2 3
T T r + T + T r + r +αr = Kδ+ KT δ
  (2-12)
其中,δ为实际舵角, r 为首摇角速度, K 、 T 、 T1 、 T2 、 T3 为操纵性指数,
α为非线性常系数[132]253-254。
需要指出的是,线性模型是描述在小的操舵角下首摇角速度 r 与舵角δ的关
系, K 、T 、T1 、T2 、T3 等操纵性指数是对水动力学导数的一种近似,并且这些
操纵性指数不随首摇角速度 r 的变化而改变,一阶线性响应模型在船舶自动舵设
计中应用较多。而当操舵角δ 较大时,水动力学导数,即操纵性指数,往往会随
r 的变化而改变,因此需要通过非线性项来抵消这种改变。因此,非线性响应模
型具有更高的建模精度[132]254-255。
对船舶航向进行控制的舵机,一般由电气-液压操舵机构来驱动,因此从发
出舵角命令(舵令)到真实舵角达到舵令位置必定有一个延迟,不可能实现阶
跃操舵。该伺服系统的响应过程可用下列动态方程表示:
E EE
T δ+δ= K δ
 (2-13)
其中,δE 为航向控制器发出的舵令, KE 为舵机控制增益,TE 为舵机时间常
数。
考虑到船舶的非线性特性很难忽略,本文采用精度较高的模型(2-12)作为
舵角响应模型,联立模型(2-12)和(2-13)可得 USV 舵角响应模型:
() 3
12 1 2 3
E EE
TT r T T r r r K KT TK
α δδ δδ δ
 + + ++ = +
 +=


 
 (2-14)
不难看出,舵角响应模型(2-13)描述的是舵令δE 与首摇角速度 r 的响应关
系。模型中的参数 K 、T1、T2 、T3、α会随着船舶航速的变化而改变,因此为提
高模型的精度,在不同的航速可考虑在线辨识得到最新的模型参数作为模型参
数。
总体来说,整体型模型、分离型模型和响应型模型具有如下特征:
(1)整体型数学模型对船舶运动描述精确,但模型本身较为复杂,水动力
导数较多且物理意义不明确,很难将船体结构(包括桨、舵)改变与模型参数
变换关联起来。
(2)分离型模型水动力导数物理意义明确,适合分析桨、舵的修改对船舶
运动性能的影响。


27
(3)响应模型结构简单,通常只需要通过 Z 型试验或者辨识实验得到模型
参数值,但响应模型不能描述船舶运动的本质,对船舶运动描述的精度相对水
动力模型低[130]。
2.2 环境干扰
2.2.1 水动力模型
为实现 USV 运动的闭环控制就有必要准确地描述作用于船体上干扰力的数
学模型。可是,由于风、浪、流干扰的随机性,建立精确的风、浪、流干扰力
模型本身就是一件很困难的事情,因而通常是利用概率论和随机过程理论来假
定外界风、浪、流干扰服从某种分布,基于此建立风、浪、流干扰模型[132]294。
USV 运动模型如图 2-4 所示。
图 2-4 环境干扰下三自由度 USV 运动模型
船舶运动仿真器要求对船舶航行过程中船舶的各种受力尽可能精确地进行
描述,因此有必要深入研究风、浪、流的具体物理模型,以生成尽可能接近现
实的风、浪、流干扰,使运动模型更具有真实性。而与船舶运动仿真器研究不
同,USV 运动控制应力求简单、易实现,因此通常是假定 USV 航行过程中外界
干扰不变或者服从某种分布。文[135]在研究船舶路径跟踪控制时就假定水动力
模型中的水流速度方向和速度均保持不变。文[136]在响应型模型中考虑了外界
干扰和建模误差,并实现了船舶路径跟踪控制。
假设 USV 航行时相对于惯性坐标系{n} 的定常水流速度大小为Vc ,Vc 在惯性
坐标系下的方向角为 ( 0)
cc
β β=
 ,于是Vc 在惯性坐标系{n} 的 x 轴、 y 轴和绕 z 轴


28
旋转的速度大小分别为 cos
cc
V β 、 sin
cc
V β 和 0。由于水流速度不为零,在附体坐
标系{b} 下船舶的相对速度 [ ]T
r r rr c
v = u v r = v − v ,其中, [ ]T
c c cc
v =u v r 为
水流在坐标系{b} 下的速度。由(2-2)式有:
( )T cos
si0n
cc c cc
VV β
ψβ

= 


v T (2-15)
由于:
()
( ) ( )0 1 0
d 100
d 000
t
ψ ψψ −





T =T
因此:
( )T cos
0 10
1 0 0 sin
0 00 0
cc c cc
V
r Vβ
ψβ


=−  
  

  
v T
假定风、浪、流等环境干扰对船体的作用力分别为 ( )
τwind t 、 ( )
τwave t 和
()
τcurrent t ,在这些环境干扰下船舶运动数学模型修正为:
() ( ) ( ) + +
RB A r RB A r r r r wind wave current
++ + + = +

M v M v C v v C v v D v v τ τ τ τ (2-16)
其中,τ 、 wind
τ 、 wave
τ 和 current
τ 分别定义如下:
:u
v r
tff

= 


τ , wind
: uwind
wind v rwind
tff

= 


τ , : uwave
wave vwave rwave
tff

= 


τ , : ucurrent
current vcurrent rcurrent
tff

= 


τ
其中, fu 、 fv 和 tr 分别表示船舶执行机构的螺旋桨、侧推器和舵机产生的
前进力、横漂力和首摇力矩。由于 USV 一般是欠驱动的,即没有侧推器产生的
侧推力(忽略舵叶产生的微小侧推力),因此一般可认为 0
fv ≡ 。 uwind
f 、 uwave
f、
ucurrent
f 分别为风、浪、流产生的前进力, vwind
f 、 vwave
f 、 vcurrent
f 分别为风、浪、
流产生的横漂力, rwind
t 、 rwave
t 、 rcurrent
t 分别为风、浪、流产生的首摇力矩。


29
从模型(2-16)可以看出,附加质量力 A r
M v 、流体动力学离心力 ( )
Ar r
C vv
和流体粘性阻力 ( r ) r
D v v 均与相对水流速度 vr 相关。自然环境下的风、浪、流具
有较强的随机性,精确建立环境干扰模型是十分困难的,本文利用均匀分布来
近似描述环境干扰。定义环境总干扰 : +
d wind wave current
τ =τ +τ τ ,并且满足:
((( )))
1
2
3
1 2 3
ud d vd td
rand t
ff rand t
f rand t
α α α

  
==
  

  
τ (2-17)
其中, ( )
α1 α1 ≥ 0 、 ( )
α2 α2 ≥ 0 和 ( )
α3 α3 ≥ 0 分别为风、浪、流的权重参数,
()
rand1 t 、 ( )
rand 2 t 和 ( )
rand3 t 均表示 [ ]
−1 1 的均匀随机数。于是模型(2-16)
变为:
() ( ) ( ) +
RB A r RB A r r r r d
++ + + =

M v M v C v v C v v D v v τ τ (2-18)
模型(2-18)因其物理意义较为明确、不考虑推进力具体结构而在船舶运动
仿真研究中应用广泛,但在真实船舶运动控制中由于较难获得系统力和力矩τ 与
系统输入舵角δ、螺旋桨转速 n 之间的对应及耦合关系,因此通常很少直接用于
船舶运动控制器的设计。
2.2.2 响应型模型
不同于水动力模型,响应型模型是一种单输入单输出模型,外界环境干扰
对模型的影响只能通过首摇角速度 r 、首摇加速度 r 或首摇角速度的二阶导数 r
来体现。由于环境干扰(比如水流影响)和建模误差(比如船体质量左右不对
中)的存在,一些文献[88]会在模型(2-9)~(2-13)中考虑压舵角δr ,压舵角
(0
δr ≠ )的存在表明船舶需通过操舵(舵不居中或船体不对称)来保持船首向
不变(ψ= r = 0
 )。通常认为压舵角δr 为固定常数,但考虑到外界干扰的不确定
性,压舵角也是一个变化的参数,因此本文用参数 d0 代替δr 来描述环境干扰和
建模误差。于是,模型(2-14)可描述为:
() ( )
3
12 1 2 3 0
E EE
TT r T T r r r K T d
TK
α δδ
δδ δ
 + + ++ = + +
 + =


 
 (2-19)
水流速度Vc 不仅会对响应模型有影响,还会导致惯性坐标系中船舶航速发


30
生改变。当 0
Vc ≠ 时,则惯性坐标系和附体坐标系速度向量之间的转换关系为:
sin
sin cos 0
cos sin 0 cos
0 01 0
cc cc
V
xu
y vV
rr
β
ψψ
ψψ β
− 
 

= + 
 
  
 


   

2.3 模型不确定性
USV 运动模型参数一旦确定以后(通过参数测量或者系统辨识方法),通
常认为该运动模型参数保持不变,并以此来设计运动控制器,但实际上船舶运
动过程中运动模型中存在很多不确定性,主要表现在:1船舶装载量的改变、
浅水区水深的改变、舵或螺旋桨执行机构的老化及船体表面粗糙度的改变等原
因会使船舶重心、控制延时和运动阻力等发生相应改变,从而引起船舶运动性
能和运动模型参数发生变化;2由于传感器噪声始终存在,因此获取的运动状
态跟真实状态始终不一致;3对于舵角响应模型,航速的变化也会引起模型参
数的改变。在设计 USV 运动控制器时,如果不考虑模型中的这些不确定性,会
造成控制器性能变差,从而间接造成船舶能耗增加、航行风险增大等后果。
以下分别以水动力模型和响应型模型来探讨船舶运动模型的不确定性。
2.3.1 水动力模型
模型(2-18)中考虑模型参数改变,具体如下:
( ) ( ) () ()
()
() ()
( ) () ()
()
+ d RB RB A A r RB RB
Ar Ar r r r r
= +Δ + +Δ + +Δ
+ +Δ + +Δ

M M v M M v C v C vv
C v C v v Dv Dv v
τ τ (2-20)
其中, RB
ΔM 、 A
ΔM 、 ( )
RB
ΔC v 、 ( )
Ar
ΔC v 、 ( r )
ΔD v 为模型参数改变量。
为便于控制器设计和分析,将水动力模型转换为状态空间模型。定义系统
状态向量 [ ]T
x = x y ψ u v r ,即 T
TT

= 
x v η ,联立式(2-1)和式(2
20),于是船舶状态空间模型可表示为:
() ( ) () ( ) ( )
()
1+
RB A d A c RB A r r r r
ψ
−
=
 ′′ ′′ ′ ′
=+ +− − −



Tv v M M Mv C vv C v v D v v
η
τ τ (2-21)
其中:


31
RB RB RB
M ′ = M + ΔM , A A A
M′ = M + ΔM , ( ) ( ) ( )
RB RB RB
C′ v = C v + ΔC v
() () ()
Ar Ar Ar
C′ v = C v + ΔC v , ( ) ( ) ( )
rr r
D′ v = D v + ΔD v
模型(2-21)还可能存在传感器噪声引起的状态量测量偏差,假设测量噪声
为 6×1
w ∈,则加上测量噪声后模型(2-21)变为:
() ( ) () ( ) ( )
()
1+
RB A d A c RB A r r r r
ψ
−


== +

 ′ ′ ′ ′ ′ ′
+ +− − −
  

 
Tv
xw
v M M Mv C vv C v v D v v
η
ττ
(2-22)
2.3.2 响应型模型
首 先 将 模 型 ( 2-19 ) 转 换 为 状 态 空 间 模 型 。 定 义 系 统 状 态 向 量 为
[ ]T
x = ψ r r δ ,模型(2-19)可转换为如下状态空间模型:
( )( )
()
3
33
12 0 12
1
1
E EE
EE
EE E
rr
K T T KK T
r r r T Tr d
r TT T T
K
T
ψ
α δδ
δ δδ


  
 −
  −− − + + + +

==  
  

  
 −



 
 
x (2-23)
其中,舵令δE 为系统输入。
类似地,考虑到模型参数的改变,定义 K K K
′= +Δ 、 1 1 1
TT T
′= + Δ 、
22 2
TT T
′= +Δ 、 3 3 3
TT T
′= +Δ 、 E E E
TT T
′ = + Δ 、α α α
′= +Δ 、 0 0 0
dd d
′ = + Δ 。在考虑
模型参数改变和传感器误差等因素情况中,舵角响应模型(2-23)可变为:
()( )
()
3
33
12 0 12
1
1
E EE
EE
EE E
rr
K T T KK T
r r r T Tr d
r TT T T
K
T
ψ
α δδ
δ δδ


  
′′ ′
 −
′′
 ′ ′ ′ ′
−− − + + + +

== +

  ′′ ′ ′


  
 −

′


 
 
xw
(2-24)
其中, 4×1
w ∈ 为测量噪声。


32
2.4 本章小结
介绍了船舶运动相关的惯性坐标系和附体坐标系及坐标系之间的坐标转换
关系,总结了当前船舶运动模型的主要类型,即水动力模型和响应型模型,分
别分析了不同运动模型的建立原理和主要特点,针对 USV 的运动控制的具体需
求,在模型中考虑了环境干扰和模型不确定性,为后续研究 USV 的运动控制提
供了基础。


33
第 3 章 不确定环境下基于预测控制的无人船 轨迹跟踪控制
船 舶 的 路 径 跟 踪 控 制 通 常 可 分 为 两 种 情 况 : 一 种 是 轨 迹 跟 踪 ( trajectory
tracking)控制,其目标轨迹(参考轨迹)是时间的函数,要求船舶在指定的时
间跟踪到目标位置;另一种是路径跟随(path following)控制,仅需要船舶沿着
预设的航迹(几何路径)运动,在时间维度对航行过程没有要求。其实这两种
控制方式在实际船舶运动控制中能够实现相同的控制效果,在路径跟随中如果
对船舶航速进行控制(如保持航速大小不变),那么就可以计算船舶在未来某
一时间能够到达的目标位置。模型预测控制(model predictive control, MPC)是
基于滚动时域原理,通过模型预测、反馈校正和滚动优化在计算当前和未来时
刻的最优控制量,实现对参考状态的跟踪。由于 MPC 具有预测模型的多样性、
滚动优化的时变性、反馈校正的鲁棒性等特征,使得其在不确定性和干扰等环
境下能够有较好的控制性能。
目前在利用 MPC 设计船舶轨迹跟踪控制算法时对环境因素干扰、执行器饱
和约束、控制增量约束、输出约束等限制条件的考虑还不是很完善,本章在第 2
章所述的 USV 运动模型的基础上,分别实现了线性和非线性离散 MPC 算法的设
计,最后在 Matlab 平台上分别在有环境干扰和无环境干扰情况下分析并验证了
所提出的控制算法的轨迹跟踪性能。
3.1 基本原理
3.1.1 MPC 基本原理
MPC 的基本原理如图 3-1 所示[137]。在时刻 k ,根据当前时刻测量输出和参
考轨迹,求解在预测步长 NP 内的最优预测控制输入序列,使得以预测输出和参
考轨迹定义的目标函数最小,将最优预测控制输入序列中的第一个控制输入作
为时刻 k 的系统控制输入,当其输入系统后,在时刻 k + 1 又重复时刻 k 的计算过
程,从而得到时刻 k +1 的最优系统输入,这种滚动优化的策略能够保证每一步
的输入都是基于当前状态计算到的最优值,这是 MPC 与最优控制的不同之处。
MPC 的控制性能与建模精确性、预测步长、目标函数最优求解效率都有关系,
在控制过程中应结合具体的需求选择适当简化的模型、合适的控制参数和目标


34
函数,以满足不同的控制系统的需求。
图 3-1 MPC 基本原理
3.1.2 基于 MPC 的 USV 轨迹跟踪基本原理
在 USV 轨迹跟踪过程中,首先由传感器获取当前 USV 运动状态,再结合系
统预测模型、前一时刻控制输入、未知输入序列计算未来预测输出轨迹序列;然
后将预测输出轨迹序列、参考轨迹和未知输入序列代入目标函数,在考虑系统约
束情况下求解最优输入序列使目标函数值最优;最后将最优输入序列的第一个输
入量作用到船舶并保持一个控制周期,由于外界干扰的存在,船舶真实状态与预
测状态有差别,因此需要通过传感器获取船舶真实运动状态,利用该状态进行下
一步最优输入计算[138]。基于 MPC 的 USV 轨迹跟踪控制原理如图 3-2 所示。
图 3-2 MPC 的轨迹跟踪控制原理
未知输入序列
系统约束
欠驱动水面 船舶
参考轨迹
运动状态反馈

+
传感器
目标函数 最优输入序列
外界干扰
系统预测 模型
初始状态
第一个 控制量
预测输出序列


35
3.2 基于线性 MPC 的轨迹跟踪控制
3.2.1 非线性状态空间模型建立
USV 是一个具有大惯性和时滞特性的复杂系统,在航行时会同时受到动力
系统的推力、水动力(流体阻力等)、水静力(浮力等)、外界干扰力(波浪、
风、水流等)等多种力的作用,因此 USV 轨迹跟踪模型具有明显的非线性特征。 USV 轨迹跟踪是对运动目标轨迹的实时跟踪,对 USV 的机动性要求较高,
单纯的航向控制很难满足轨迹跟踪的需求,因此通常使用水动力模型作为轨迹
跟踪控制模型。为简化模型的复杂性,水动力模型中不考虑舵、螺旋桨的驱动
模型及耦合关系,用力和力矩作为轨迹跟踪控制的输入,位置作为轨迹跟踪控
制的输出。考虑到 USV 的欠驱动性,系统输入由三自由度输入 [ ]T
u vr
τ= f f t
变为二自由度输入 [ ]T
ur
ft
τ′ = 。因此 USV 的水动力模型(2-18)相应变为:
() ( ) ( ) 1 +
RB A r RB A r r r r d
′
++ + + =

M v M v C v v C v v D v v Pτ τ (3-1)
其中,
T
1
100
001

= 

P ,其他参数定义与式(2-18)一致。
定义 [ ]T
x = x y ψ u v r 为系统状态变量, [ ]T
ur
ft
′
u =τ = 为控制输
入, [ ]T
y = x y 为系统输出,于是 USV 运动的状态空间模型为:
( ) ()
( ) () ( ) ( )
()
1 1
2
= ,= 
RB A d A c RB A r r r r
fψ
−


−−
 =

Tv
x x u M + M Pu+ + M v C v v C v v D v v
y Px
τ
(3-2)
其中,函数 ( )
62 6
f  ×  →  为 USV 运 动 模 型 的 非 线 性 方 程 ,
[ , ,]
d ud vd rd
τ = f f t 为环境干扰, vc 为附体坐标系 {b} 中的水流速度, ( )
T ψ 定义见
式(2-2), 2
100000
010000

= 

P。
3.2.2 模型线性化和离散化
利用 MPC 解决 USV 非线性系统的轨迹跟踪控制问题通常有两种解决方法,


36
一是先对系统进行离散化,再对其进行线性化,最后利用线性 MPC(linear
model predictive control, LMPC)求解最优控制序列;二是在对系统进行离散化的
基础上利用非线性 MPC(nonlinear model predictive control, NMPC)求解最优控
制序列。第一种方法控制的实时性较好,但控制精度会稍有降低;第二种方法
由于涉及到非线性二次规划问题,求解最优值过程较为复杂,实时性不好。本
节讨论如何利用第一种方法来实现 USV 的轨迹跟踪控制,第二种方法将在 3.3 节
中讨论。
3.2.2.1 线性化
将一个非线性系统近似为线性时变系统有很多方法,可分为近似线性化和
精确线性化。近似线性化方法简单,适用性强,但精度不是特别高;精确线性
化方法一般不具备普遍性,往往需要针对单个系统具体分析。模型预测控制中
一般采用近似线性化方法。假设参考系统已经在期望路径上完全通过,在获取
路径上每个时刻的状态量和控制量的基础上,通过对参考系统和当前系统的偏
差处理设计使模型预测控制器来跟踪期望路径。式(3-3)表示参考系统方程,
即在不考虑干扰情况下的参考轨迹(τd = 0 , vc = 0 )。
()
,
R RR
=f
x x u (3-3)
在任意参考点 ( )
R, R
x u 处对函数进行一阶泰勒展开,得到式(3-4)。
() () ()
,
RR RR
RR R R
ff
f= = ==
∂∂
= + −+ −
∂∂
 xx xx
uu uu
x xu x x uu
x u (3-4)
由式(3-4)减去式(3-3),得到:
=+
  
x Ax Bu (3-5)
式中, R
=−
x x x , R
=−
u u u , R
R
f
= =
∂
= ∂ ux ux
Ax , R
R
f
= =
∂
= ∂ ux ux
B u 。式(3-5)为系
统新的状态空间模型。
3.2.2.2 离散化
MPC 通常需要在线求解带有约束条件的线性规划、二次规划或非线性规划
等问题,而这些规划问题由于没有解析解,一般很难通过设计模拟或数字逻辑
电路计算得到最优控制量,因此在绝大部分情况下需求助数字计算机进行数值
求解。为便于数字计算机的处理,通常先将连续系统模型离散化,再基于离散


37
化的模型进行数值计算。
采用一种近似离散化方法——欧拉法对模型(3-5)进行离散化,于是有:
,
kk
A = I + T ⋅ A B = T ⋅ B (3-6)
其中, Ak 和 Bk 分别为离散化后的系统矩阵, T 为离散时间步长, I 为单位
矩阵。结合式(3-2)、(3-5)和(3-6),可得:
( ) () () () ()
2
1k k
k kk
kk
 +=

=+
 

x Ax Bu
y P x (3-7)
其中, (k)
y 表示离散系统输出,即 ( ) ( ) ( )
R
k= k− k
y y y 。式(3-7)表示非
线性系统在任意一个参考点 ( )
R, R
x u 处线性化后的系统方程。
3.2.3 约束条件设置
由于 USV 的螺旋桨驱动机构和舵机受机械性能的影响,其运动范围和速率
有限,因此有必要考虑控制量极限、控制增量等约束。同时,为了船舶航行安
全,需对船舶运动轨迹进行边界限制,即对输出量进行约束。在时刻 k 及预测周
期 NP 内,控制量极限、控制增量及输出量约束表达如下:
()
min max , 0,1, 2, , 1
C
Δu ≤ Δu k + i ≤ Δu i =  N − (3-8)
()
min max , 0,1, 2, , 1
C
u ≤ u k + i ≤ u i =  N − (3-9)
()
min max , 1, 2, , P
y ≤ y k + i ≤ y i =  N (3-10)
其中, NP 为预测步长, NC 为控制步长, min
Δu 、 max
Δu 为输入增量约束,
min
u 、 max
u 为 输 入 约 束 , min
y 、 max
y 为输出约束,且满足
Δu (k + i) = u (k + i) − u (k + i −1) 。 需 要 说 明 的 是 , 通 常 P C
N ≥N , 且
( ) ( 1), , , 1
C CP
u k+i =u k+N − i= N  N − 。
为同时处理约束条件(3-8)、(3-9)和(3-10),定义新的系统状态变量
ξ(k ) 为:
() ()
( 1)
k
kk

= 
−

 
x u
ξ


38
结合模型(3-7)和ξ(k ) ,得到如下新的状态空间模型:
( ) () ()
() ()
1k k
k
k kk
kk
+Δ
=
=+



A Bu
yC
ξξ
ξ
(3-11)
其中, k k
k m×n m

= 

0
 AB
A I, k
km

= 

B
B I, [ ]
k 2 2×m
=0
C P 。 m 为系统控制量维度,
n 为系统状态量维度。对于欠驱动 USV 运动模型, m = 2 、 n = 6 。为简化运算,
在预测时域 NP 内,假定:
, , 1, 2, ,
ki k ki k P
iN
A + = A B + = B =  (3-12)
由式(3-11)和(3-12)可得到系统的预测输出表达式:
() () ()
kk
k= k+ Δ k
Y Ψξ Θ U (3-13)
其中, (k )
Y 为在预测时域 NP 内的预测输出, ΔU (k ) 为控制时域 NC 内的预
测输入, k
Ψ和 k
Θ 为系统矩阵,它们具体定义如下:
()
()
()
()
()
1 2
C
P
k k
k kN
kN
+


+

= 
+


+


  



y y
Yy
y
,
2
C
P
kk
kk
N
k
kk
N kk



= 




 
 
 
CA CA
CA
CA
Ψ , ()
()
()
()
1
C -1
k k
k
kN
Δ


Δ+
Δ = 

Δ+


u u
U
u
12 ,1
12
CC
CC
PC
PP
kk
kkk kk
NN
k k k k k tt k k k
NN kk k kk k kkk
NN
NN kk k kk k kk k
−−
−
−
−−




= 




00 0 00
  
   
  
 

  
 

  
  
 

CB C AB C B
CA B CA B CB C A B C A B C AB
CA B CA B CA B
Θ
在求解目标函数最优值时,上述约束条件在预测时域 NP 和控制时域 NC 内
可表示为:
() () ()
() ()
min max
min max
min R max
k
kk
kk
Δ ≤Δ ≤Δ
≤Δ + ≤
≤+ ≤

UU U
U MU U U
YY Y Y
(3-14)


39
式中, min
U 、 max
U 表示控制时域内控制量最小值、最大值集合, min
ΔU 、
max
ΔU 表示控制时域内控制增量最小值、最大值集合, min
Y 、 max
Y 表示输出约束。
上述变量具体表示如下:
min min
NC
ΔU = 1 ⊗ Δu , max max
NC
ΔU = 1 ⊗ Δu , min min
NC
U = 1 ⊗ u , max max
NC
U =1 ⊗u
( ) ( 1)
NC
U k = 1 ⊗ u k − , min min
NC
Y = 1 ⊗ y , max max
NC
Y =1 ⊗y
10 0
11 0 0
1 1 1 00
11 1 1
u
CC
N
N ×N


=⊗




  
  

M I,
()
()
()
1 2
R
R
R
RP
k k
kN
+


+
= 

+


y y
Y
y
其中, 1NC 表示行数为 NC 的列向量, INu 表示维数为 Nu 的单位矩阵, Nu 为
控制输入维数,⊗表示克罗内克积, yR 为参考轨迹。
3.2.4 最优化问题
若要保证 USV 能快速且平稳地跟踪期望轨迹,就需以系统状态量的偏差、
控制量以及控制量增量来构建目标函数。目标函数在设计时应同时考虑跟踪目
标的速率和系统输入的能量消耗,因此目标函数定义如下:
() ( ) ( )
1
22
10
C
PN
N
ii
Jk k i k i
−
==
= + + Δ+

Q R
y u (3-15)
式中, 和 为权重矩阵,可根据控制需求的不同而更改权重大小。为便于
求解式(3-22)所示的带有约束的二次型最优值问题,由式(3-11)和式(3
13),并去掉与 ΔU (k ) 无关的项,得到如下标准二次型目标函数:
()
( ) () () ()
TT
1
2 kk
J ΔU k = ΔU k H ΔU k + G ΔU k (3-16)
其中:
( ) ()
TT
2 , =2
k = k e k+ e k k e k k 

H Θ QΘ R G Θ Q Ψξ
,=
PP CC
ee
NN NN
××


= 
 

 

R
Q
QR
QR
QR


40
因此基于线性 MPC 的船舶轨迹跟踪可描述为如下最优值问题:
() ( )
()
{}
() () () () () ()
() ()
min max
min max
min max
arg min
..
,
,
,
.
k
kk
R
Jk
st
kk k
k
kk
kk
Δ
Δ
= +Δ
Δ ≤Δ ≤Δ
≤Δ + ≤
≤+ ≤


U
U
YU
UU U
U MU U U
YY Y Y
Ψξ Θ (3-17)
3.2.5 仿真实验
考虑到船舶水动力模型参数通常通过船舶拖曳实验获得,过程比较繁琐,
因此为验证本文提出的 USV 轨迹跟踪控制的效果,本文以文[139]中的 CyberShip
II为 USV 仿真模型,分析其跟踪圆形轨迹的误差及性能。CyberShip II水动力模
型参数如表 3-1 所示。
表 3-1 CyberShip II水动力模型参数
参数 数值 参数 数值
m 23.800 v v
Y -36.282
Iz 1.760 Nv 0.105
xG 0.046 v v
N 5.044
Xu -2.000 r v
Y -0.805
Yv -10.000 Yr 0.108
Yr -0.000 v r
Y -0.845
Nv -0.000 r r
Y -3.450
Nr -1.000 r v
N 0.130
Xu -0.723 Nr -1.900
uu
X -1.327 v r
N 0.080
uuu
X -5.866 r r
N -0.750
Yv -0.861
3.2.5.1 参数设置
(1)模型参数设置
1)针对式(3-2)描述的状态空间方程,根据表 3-1 中 CyberShip II的动力


41
学参数,系统矩阵为:
23.8 0 0
= 0 23.8 1.0
0 1.0 1.8
RB




M , 2.0 0 0
= 0 10.0 0
0 0 1.0
A




M,
( ) 0 0 1.1 23.8
= 0 0 23.8
1.1 23.8 23.8 0
RB
rv
u
rv u
−−



+−

C v , ( ) 0 0 10
=0 0 2
10 2 0
r Ar r rr
uv
vu
−



−

Cv ,
()
2
0.7 1.3 5.9 0 0 0 0.9 36.3 0.8 0.1 0.8 3.5 0 0.1 5.0 0.1 1.9 0.1 0.8
rr
r rr rr
rr r r
uu vr vr vr vr

++

= + + −+ +

−− − − +

Dv
2)CyberShip II原为全驱动船舶,分别配备纵向推进器、横向推进器及舵机。
本文考虑的对象为欠驱动 USV,模型中应忽略横向推进器。最大纵向推进力 fu
为 2 N,最大偏航扭矩 tr 为 1.5 N·m,分别对应在真实船舶最大纵向推力和最大偏
航扭矩分别为 686 kN 和 36 015 kN·m。
3)最大航速为 0.2 m/s,对应真实船舶航速为 1.7 m/s。 (2)仿真参数
仿真环境中,船舶跟踪的圆形轨迹参考轨迹为:
() ( )
() ( )
()
4sin 0.02
4 1 cos 0.02
xt t
yt t
 == −

参考轨迹离散化后形成一系列参考点 ( )
,
R RR
y xy :
()
()
()
4sin 0.02
4 1 cos 0.02 , 0,1, ,
R
RR
x nT
y nT n N
 == − =
 
其中, NR 表示参考点个数,取 187
NR = ;T 表示单步仿真时长,取T = 2 s 。
非线性函数(3-3)线性化是以 ( )
R, R
x u 为参考的,在本仿真中设置为:
[ ]T
R R R R R RR
x = x y ψ u v r , [ ]T
0.075 0.015
uR =
其中, 0.02
ψR = nT , [ ] ( ) ( ) ( ) T
T T 0.02
R RR R R R
u v r = ψ x nT y nT 


T。
目标函数(3-16)中 Q 和 R 分别设置为:
100 0
0 100

= 

Q , 100
=0 1 0
001




R


42
轨迹跟踪的初始条件设置为:1初始位置为 ( )
y0 0, 0 ; 2 初 始 航 向 为
ψ0 = 0.04 rad ;3初始速度为 ( ) ( )
0 00
u , v , r = 0, 0, 0 ;4预测时域为 10
NP = ,控制
时域为 8
NC = 。
(3)环境干扰参数 模型(3-2)的干扰可分为两种,一种是由于环境干扰造成船舶受力(力矩)
的改变,即τd ;另一种是由于水流存在导致船舶航速的改变,即Vc 。
参考式(2-17)对环境干扰力(力矩)的定义,设定本仿真环境下的干扰力
矢量τd 为:
ud d vd td
f rand
f rand
rand
fα
  
==
  
  


τ
其中,α(α≥ 0) 为权重参数, rand 表示[ ]
−1 1 的均匀随机数。
考虑到航行时惯性坐标系{n} 下的水流速度和方向通常保持不变,且通过航
行数据记录仪(voyage data recorder, VDR)或水流速度仪都可以测量到水流速度
的大小和方向,因此在轨迹跟踪控制过程中可假定Vc 已知。
(4)约束参数设置
MPC 求解时可以在目标函数中直接考虑约束,USV 运动控制时的系统约束
定义如下:
1)输入量约束: ( )
-2 2 0
-0.4 0.4
β ββ
  
≤≤ ≥
  
  
u;
2)输入增量约束: ( )
-2 2 0
-0.4 0.4
γ γγ
  
≤Δ ≤ ≥
  
  
u;
3)输出量约束: ( )
-10 10 0
-12 12
η ηη
  
≤≤ ≥
  
  
y。
通过调整β、γ 和η的大小来研究系统约束对控制性能的影响。
3.2.5.2 实验结果及分析
本文在 Matlab 平台环境下进行仿真实验。仿真过程中真实轨迹点为 ( )
S, S
xy ,
轨迹跟踪偏差 dE 定义为 ( ) ( )
22 E SR S R
d = x − x + y − y 。分别在有环境干扰与无环
境干扰两种情况下对 USV 轨迹跟踪控制器进行仿真,以验证控制器的性能。仿


43
真流程如图 3-3 所示。在 Matlab 仿真流程中的最优求解函数根据优化问题的不同
而选择不同的最优化函数,一般来说,LMPC 会选择 quadprog 函数,NMPC 会
选择 fmincon 函数,且 quadprog 比 fmincon 一般具有更高的求解效率。
k时刻 系统最 优输入 u(k)
MPC预测 模型 ( ) () ()
()
x k +1 = f x k ,u k
MPC 最优 化求解
(quadprog或fmincon函数)
() ( )
()
min obj_fun x k , u k - 1
系统 约束 () [ ] () [ ]
min max
min max
∈
Δ ∈Δ Δ
k k
u uu u uu
ode45函数
(k+1)时刻 输出y(k+1)、 状态 量x(k+1)
系统模型: ( )
=,

x f x u k时刻系统状态
量x(k)
k=k+1
设置 系统参 数、
U SV初始 状态(x0,u0)、 k=0
x (k + 1)
是否 到达目 的地?
是
否
开始 仿真
仿真 结束,画图
图 3-3 仿真流程
(1) 无环境干扰
在无环境干扰条件下,即τd = 0 、 0
Vc = ,轨迹跟踪结果如图 3-4 所示,跟踪
过程中的状态变化如图 3-5 所示。


44
图 3-4 无环境干扰下轨迹跟踪结果( 0
Vc = , α = 0 , β=1, γ =1, η=1)
图 3-5 无环境干扰下轨迹跟踪状态变化( 0
Vc = , α = 0 , β=1, γ =1, η=1)
从仿真结果可见,在无风、浪、流干扰情况下,设计的 LMPC 控制器能使
USV 跟踪上目标轨迹,跟踪误差逐渐减小,最终趋近于 0,具有较好的轨迹跟踪
效果。
(2)有环境干扰
当有环境干扰时,轨迹跟踪控制器的跟踪性能通常会受到一定的影响,
纵向位置Y (m)
[deg]
v [m(rad)/s]
d [N(Nm)]
[N(Nm)]
dE [m]


45
MPC 在应对干扰时具有较强的鲁棒性,有必要验证基于 LMPC 的 USV 路径跟踪
控制器抗干扰性能。
1)当环境干扰参数 0
Vc = 、α = 0.025 ,LMPC 控制器能较好地完成对轨迹
的跟踪,轨迹跟踪结果和状态量变化分别如图 3-6 和 3-7 所示。
图 3-6 环境干扰下轨迹跟踪结果( 0
Vc = , α = 0.025 , β=1, γ =1, η=1)
图 3-7 环境干扰下轨迹跟踪状态变化( 0
Vc = , α = 0.025 , β=1, γ =1, η=1)


46
2)当环境干扰参数 0
Vc = 、α = 0.05 时,LMPC 控制器轨迹跟踪的效果变差,
轨迹跟踪结果和状态量变化分别如图 3-8 和 3-9 所示。不难看出,干扰的增大会
导致控制输入波动更大,最终导致真实轨迹很难收敛到目标值。
图 3-8 环境干扰下轨迹跟踪结果( 0
Vc = , α = 0.05 , β=1, γ =1, η=1)
图 3-9 环境干扰下轨迹跟踪状态变化( 0
Vc = , α = 0.05 , β=1, γ =1, η=1)
3)当环境干扰参数 0.05
Vc = 、α = 0.025 时,USV 轨迹跟踪时除了受到确定
干 扰 力 外 , 还 受 到 水 流 影 响 , 且 水 流 速 度 在 惯 性 坐 标 系 {n} 中 的 漂 角
0.05 rad
βc = 。这里涉及到的一个问题就是控制器能否获取到环境水流速度信息,
从理论上分析,如果水流速度Vc 已知,就可以在控制中补偿由于水流速度带来
-5 -4 -3 -2 -1 0 1 2 3 4 5
横向位置X (m)
-1
0
1
2
3
4
5
6
7
8
9 轨迹跟踪效果
参考轨迹 真实轨迹
0 100 200 300 t [s]
0
2 a) 船首向
0 100 200 300 t [s]
-0.5
0
0.5 b) 速度
uvr
0 100 200 300 t [s]
-0.2
0
0.2 c) 环境干扰
fud fvd trd
0 100 200 300 t [s]
-2
0
2 d) 控制输入
fu tr
0 100 200 300 t [s]
-2
0
2 e) 跟踪误差


47
的控制偏差,使轨迹跟踪控制更精确;反过来,如果Vc 未知,就会造成控制很
难收敛,偏差较大。图 3-10 中对比了这两种情况下的轨迹跟踪性能,虽然即使
Vc 已知时,Vc 的存在也会造成控制产生偏差,但是当Vc 未知时会对控制效果造
成更大的影响。
图 3-10 环境干扰情况下水流速度是否可知的轨迹跟踪效果比较
(2)约束的影响 系统约束既可能是由于机构硬件性能受限而产生的,也可能是由于人为需
求而增加的。在 USV 轨迹跟踪过程中,约束太严格会造成轨迹跟踪的效果变差。
针对约束相关参数β、γ 和η,当更改约束大小时,相应的控制效果也会变化。
当β由 1 变为 0.1 时,轨迹跟踪效果对比如图 3-11 所示。主要原因是当输入约束
太小时,会造成船舶的操纵性变差,比如回旋半径增大,从而导致轨迹跟踪性
能变差。
-5 -4 -3 -2 -1 0 1 2 3 4 5
横向位置X (m)
-1
0
1
2
3
4
5
6
7
8
9
纵向位置Y (m)
轨迹跟踪效果对比
参考轨迹 Vc 未知的真实轨迹 Vc 已知的真实轨迹


48
图 3-11 约束条件对轨迹跟踪控制效果比较
仿真结果表明,当环境干扰增大时,跟踪误差逐渐增大,当干扰增加到一
定值时,误差无法收敛,最终导致无法跟踪目标轨迹;同时,控制量极限和控
制增量约束越小,跟踪效果越差;随着控制量极限、控制增量约束增大,跟踪
效果越好,但当约束增大到一定程度时,跟踪效果改变不明显。
3.3 基于非线性 MPC 的轨迹跟踪控制
MPC 是一种基于对象模型的控制方法,其控制精度与模型的精度有直接关
系。对于非线性系统,线性化非线性系统模型后再用 MPC 控制可以使控制过程
简化,计算速度提升,但是也可能会造成控制精度降低,控制器鲁棒性变差等
后果。这主要是因为线性化是对非线性模型的一种近似表达,而且通常系统状
态在平衡点附近才能保证线性化是准确的,一旦系统状态偏离平衡点较大,就
很难保证控制的精度[140]。
随着计算机性能的提升,非线性最优化问题的求解速率也越来越快,且由
于非线性模型本身的精确性比线性化的模型高,因此基于非线性模型的 MPC,
即 NMPC,也是一种值得尝试的控制方法。基于 NMPC 通常是将模型离散化后
通过求解非线性最优化问题得到最优解,并将最优解作用于系统。
3.3.1 模型离散化
针对 USV 轨迹跟踪运动模型(3-2),采用龙格-库塔法对其进行离散化。龙
格-库塔法是用于求解非线性常微分方程的一种较精确的方法,非线性模型的离
散化可以理解为在已知非线性模型结构和初始条件前提下求解下一时刻系统状
态的过程,因此龙格-库塔法有利于提高离散化的精度。针对非线性函数
()
x = f t,x ,当前时刻 k 的函数初始值为 ( ) k
x k = x ,利用经典四阶龙格-库塔法求
解下一时刻 k + 1 的函数值 x (k +1) 为:
( ) () ( )
1 2 34
1= 2 2
6
T
x k + x k + K + K + K + K (3-18)
其中, T 表示时刻 k 与时刻 k + 1 的时间间隔, K1 、 K2 、 K3 与 K4 具体定义
如下:


49
1 2, k
T
K f kT x

=+


,2 1
2, 2
k
TT
K f kT x K

= ++


32
2, 2
k
TT
K f kT x K

= ++


,( )
43
,k
K = f kT + T x + TK
对于式(3-2),应用式(3-18)所示的离散化方法,得到离散化后的状态
空间模型为:
( ) () ()
()
( ) ()
2
1,
1
d
k f kk
kk
 +=
 + =

x xu
y P x (3-19)
其中, fd 为函数 f 经过四阶龙格-库塔转换后的离散化函数。
3.3.2 约束条件设置
与 LMPC 相同,NMPC 也需要设置约束条件,控制输入极限、控制增量及
输出量约束表达如式(3-8)、(3-9)、(3-10)所示。 为同时处理 Δu 和 u 约束,定义新的状态量为:
() ()
( 1)
k
kk

= 
−

x u
ξ
由式(3-19)可得:
( ) () ( ) ()
()
()
,1
1 fd k k k
kk

−Δ
+ = 

x u +u u
ξ (3-20)
式(3-20)也可以写成:
( ) () () ()
()
() () () ()
()
34
4
,
1,
dd
fkk k
k fk k
kk

Δ′
+= = Δ

Δ

P P +u u
P +u
ξξ
ξξ
ξ (3-21)
其中, [ ]
3 n n×2
P= I 0 , [ ]
4 2×n m
P = 0 I 。 m 为系统控制量维度, n 为系统状
态量维度。对于 USV 运动模型, m = 2 、 n = 6 。
根据约束条件(3-8)、(3-9)和(3-10),在预测时域 NP 和控制时域 NC
内有:


50
() () () ()
min max
min max
min max
k
kk
k
Δ ≤Δ ≤Δ
≤Δ + ≤
≤≤
UU U
U MU U U
YY Y
(3-22)
其中, min
ΔU 、 max
ΔU 、 ΔU (k ) 、 U (k ) 、 min
U 、 max
U 、 min
Y 、 max
Y 、M 的
定义与式(3-14)一致。Y (k ) 定义为:
()
()
()
()
1 2
P
k k
k
kN
+


+
= 

+


y y
Y
y
其中, ( ) ( ) ( )
()
5
1 , , 0,1, , 1
dP
ki f ki ki i N
′
y + + = P ξ + Δu + =  − , 且
[]
5 m 2×n
P= I 0 。
式(3-22)表明系统约束在预测时域内能以 ΔU (k ) 为自变量进行描述。
3.3.3 最优化问题
目标函数在设计时应同时考虑跟踪目标的速率和系统输入的能量消耗,目
标函数定义与式(3-15)相同。
基于 NMPC 的船舶轨迹跟踪可描述为如下最优化问题:
() ( )
()
{}
( ) ()()
()
() () () ()
min max
min max
min max
arg min
..
1 , , 0,1, , 1,
,
,
.
k
dP
Jk
st
ki f ki ki i N
k
kk
k
Δ
Δ
′
++ = + Δ + = −
Δ ≤Δ ≤Δ
≤Δ + ≤
≤≤

U
U
u
UU U
U MU U U
YY Y
ξ ξ (3-23)
由于 fd′ 为非线性函数,所以最优化问题(3-23)为非线性最优求解问题,
求解该问题效率较最优化问题(3-17)低。
3.3.4 仿真实验
为便于对比 LMPC 和 NMPC 的效果,也采用文[139]中的 CyberShip II为 USV
仿真模型。模型船参数如表 3-1 所示。


51
3.3.4.1 参数设置
轨迹跟踪的初始条件设置为:1初始位置为 ( )
y0 0, 0 ;2初始航向为ψ0 = 0 ;
3初始速度为 ( ) ( )
0 00
u , v , r = 0, 0, 0 ;4由于 NMPC 最优化问题(3-23)求解速率
较慢,预测步数和控制步数分别设置为 4
NP = 和 3
NC = 。
3.3.4.2 实验结果及分析
仿真流程如图 3-3 所示。当仿真参数设置为 0
Vc = 、α = 0.05 、β=1、γ =1、
η=1时,轨迹跟踪结果和状态量变化分别如图 3-12 和 3-13 所示。
图 3-12 环境干扰下轨迹跟踪结果( 0
Vc = , α = 0.05 , β=1, γ =1, η=1)
图 3-13 环境干扰下轨迹跟踪状态变化( 0
Vc = , α = 0.05 , β=1, γ =1, η=1)
-5 -4 -3 -2 -1 0 1 2 3 4 5
横向位置X (m)
-1
0
1
2
3
4
5
6
7
8
9
纵向位置Y (m)
轨迹跟踪效果
参考轨迹 真实轨迹
[deg]
v [m(rad)/s]
d [N(Nm)]
[N(Nm)]
dE [m]


52
从轨迹跟踪结果可以看出,NMPC 控制器在有环境干扰的情况下能够跟踪上
目标轨迹,使跟踪误差保持在比较小的范围内。
在相同的环境干扰和初始条件下,NMPC 的控制效果与 LMPC 的控制效果
对比如图 3-14 所示。从图中可以看出,NMPC 的鲁棒性优于 LMPC,这是由于
LMPC 在线性化过程中降低了模型的精度,导致在计算最优输入时出现偏差。因
此,针对这一问题,既可以考虑提高非线性求解的效率,也可以考虑提升线性
化的精度。
图 3-14 LMPC 和 NMPC 轨迹跟踪效果比较( 0
Vc = , α = 0 , β=1)
3.4 基于 MPC 与基于滑模控制的轨迹跟踪效果对比
为进一步验证基于 MPC 的轨迹跟踪控制方法的有效性和优越性,本文选择
USV 轨迹跟踪常用的滑模变结构控制(滑模控制)作为对比方法进行仿真实验。
考虑到 NMPC 的轨迹跟踪控制效果通常优于 LMPC 的轨迹跟踪控制效果,因此
这里选择基于 LMPC 的轨迹跟踪控制方法与基于滑模控制的轨迹跟踪控制方法
进行对比。文[25]利用滑模控制方法提出了一种 USV 的轨迹跟踪控制律,且数值
仿真实验表明该控制律具有较好的轨迹跟踪控制效果。
3.4.1 基于滑模控制的轨迹跟踪控制方法
滑模控制是一种非连续控制方法。在滑模控制方法中,定义了一系列关于
跟踪误差函数的渐进镇定切换面 S ,通过控制使系统轨迹能最终保持在滑模表面
-5 -4 -3 -2 -1 0 1 2 3 4 5
横向位置X (m)
-1
0
1
2
3
4
5
6
7
8
9
纵向位置Y (m)
轨迹跟踪效果对比
参考轨迹
NMPC 真实轨迹 LMPC 真实轨迹


53
( S = 0 )。对于 USV 轨迹跟踪控制,文[25]分别设计了纵向和横向的轨迹跟踪
控制器。具体的控制律设计过程详见文[25]。控制律设计结如下:
不考虑环境干扰下的纵向滑模控制律为:
( ) ()
22 11 11 1 1 1 1
sat /
u rE
f = −m vr + d u − m −u + λu − k S Φ
 (3-24)
不考虑环境干扰情况下的横向滑模控制律为:
( )( ) ( )
( ) ( )( )
2
22 11 22 11 33 33 2 22 2 22
33 11 22 22 0 2 2 2 22 11
{2
sat / } /
rr E E
r
t m u m u m m uv d r m m v m v
m m ur d v m v k S Φ m u m u
= −  − +  − λ +λ

+ ++ − −

  ( 3-25 )
式(3-24)、(3-25)中,参数 ii
m 和 dii 分别为船舶惯性矩阵 M 和阻尼参数
矩阵 D 在附体坐标系 x 、 y 和 z 坐标轴上的分量。 Φ1 和 Φ2 分别为边界层厚度,
sat 为饱和函数。 E r
u = u − u 表示纵向速度实际值 u 与参考值 ur 之差, E r
v =v−v
表示横向速度实际值 v 与参考值 vr 之差。 ( ) ( ) ( )
0 2 sin cos
rr r r
v = vr− u r−x ψ +y ψ
   ,
其中 xr 和 yr 表示惯性系下的参考输入,且有 ( )
r 1d
x =a x −x
 、 ()
r 2d
y =a y −y
 , xd
和 yd 为惯性系下的参考轨迹, x 和 y 为惯性系下的真实位置坐标。其他参数定
义与本章相同。
3.4.2 仿真实验对比
为使实验结果更具说服力,采用与本章 MPC 轨迹跟踪控制相同船舶模型参
数、仿真初始条件设置和控制周期。由于滑模控制不易设计复杂的约束条件,
这里仅对控制输入量进行约束,即输入量约束: ( )
-2 2 0
-0.4 0.4
β ββ
  
≤≤ ≥
  
  
u。
经不断调参,滑模控制器参数设置为: λ1 = 0.85 , λ2 = 1.0 , k1 = 0.01 ,
k2 = 0.01,Φ1 = Φ2 = 0.1, a1 = a2 = 0.1。
在无环境干扰下基于滑模控制与基于 LMPC 的轨迹跟踪控制效果对比结果
如图 3-15 和图 3-16 所示。由图 3-15 可以较明显地看出,滑模控制器在轨迹跟踪
过程中始终无法收敛至目标轨迹,而 LMPC 可以跟踪上目标轨迹。图 3-16 表明
滑模控制器的跟踪误差(平均误差:0.72 m)远大于 LMPC 的跟踪误差(平均误
差:0.04 m)。


54
由于 NMPC 轨迹跟踪控制器控制效果一般优于 LMPC 轨迹跟踪控制器。因
此,相比于滑模控制方法,可以说基于 MPC 的 USV 轨迹跟踪控制器具有更优良
的轨迹跟踪性能。
图 3-15 滑模控制与 LMPC 轨迹跟踪结果比较
图 3-16 滑模控制与 LMPC 轨迹跟踪误差比较
3.5 本章小结
针对 USV 轨迹跟踪问题,分别提出了基于 LMPC 和 NMPC 的轨迹跟踪控制
器,在控制器设计中同时考虑了系统约束、环境干扰、水流速度等因素,并利
用数值计算来求解最优化问题,通过仿真实验验证了基于 LMPC 和 NMPC 的轨
-6 -4 -2 0 2 4 6 X 位置 (m)
-2
0
2
4
6
8
10
参考轨迹 滑模控制轨迹 LMPC轨迹


55
迹跟踪效果,同时研究了不同的约束条件、环境干扰对轨迹跟踪效果的影响。
通过比较 LMPC 和 NMPC 发现,LMPC 在计算效率上具有明显的优势,但如果
系统真实状态偏离参考状态太远,LMPC 控制器容易造成跟踪效果变差,因此在
设计 MPC 的轨迹跟踪控制器时要尽可能兼顾 LMPC 和 NMPC 的优点。通过与滑
模控制器对比得出,基于 MPC 的 USV 轨迹跟踪控制器具有更优良的控制效果。


56
第 4 章 基于自适应 LOS 的无人船路径跟随控制
轨迹跟踪既要满足跟踪轨迹的时间性要求,又要满足轨迹跟踪的几何路径精
确性要求,通常需要同时控制舵角和螺旋桨转速来实现,而对于路径跟随控制,
只要满足路径跟踪的几何路径精确性要求即可,因此通常在保持螺旋桨转速不变
情况下通过控制舵角就可以实现路径跟随控制。
本章针对 USV 路径跟随问题,提出一种基于舵角响应模型的路径跟随控制
方法,具体是通过视距(line-of-sight, LOS)导航算法将目标路径跟踪转换为目
标航向跟踪,再基于舵角响应模型和 NMPC 控制方法实现 USV 的目标航向跟踪
控制;同时为提高基于 LOS 的路径跟随精度,提出了一种自适应 LOS 方法;最
后在 Matlab 仿真环境下验证了本章提出算法的有效性。
4.1 路径跟随控制原理
图 4-1 路径跟随控制系统架构
路径跟随控制系统通常包括 3 个子系统,即导航子系统、感知子系统和控制
子系统。导航子系统主要是生成目标路径和目标船首向等;感知子系统主要是


57
感知船舶的位置、航速、船首向等;控制子系统主要是根据目标船首向实现路
径跟随控制。这里将导航子系统和控制子系统统一为决策系统,路径跟随控制
系统架构如图 4-1 所示。
USV 路径跟随控制过程可描述为:1 目标路径点通过路径生成模块生成目
标路径,通常目标路径是由路径点相连的直线段组成;2 LOS 导航根据目标路
径、船舶位置、船首向计算船舶离目标路径的横向位移偏差和船首向偏差;3
航速控制器通过控制船舶螺旋桨转速来保持 USV 螺旋桨转速或航速(附体坐标
系下的纵向速度)在一段时间内保持不变,通常利用 PID 控制器可以实现;4
MPC 控制器根据船舶横向位移差、船首向差、船速计算最优舵令;5 将螺旋桨
转速指令、舵角指令输入 USV 动力系统中;6 感知系统获取船舶实时位置、航
速、船首向,并将这些信息实时输出至决策系统。
4.2 自适应 LOS 导航
LOS 导航具有目标跟踪精确、计算简便等优势,在导弹拦截跟踪控制、水
下航行器和船舶路径跟随控制领域应用较多,并且取得了较好的导航效果。路
径跟随的路径通常由目标路径点通过直线或者曲线连接而成,理论上来说,LOS
导航既可以跟踪直线段路径也可以跟踪曲线段路径,但考虑到跟踪曲线段路径
时需要实时更新路径切向角,且船舶跟踪精度要求不是特别高,因此选择直线
段路径作为 USV 跟踪的目标路径。
4.2.1 LOS 基本原理
在路径跟随中,假定目标路径点 ( )
,
n nn
Pxy 、 ( )
1 11
,
n nn
Pxy
+ + +和 ( )
2 22
,
n nn
Pxy
+ ++
已经给出,生成后的目标路径为 ( ) ( ) ( )
1 11 2 2 2
,, ,
n nn n n n n n n
Pxy P x y P x y
+ + + + + + 。LOS 导
航基本原理如图 4-2 所示,路径跟随控制的目标是使船首向ψ与方向 b LOS
O P 保持
一致。确定 LOS 点 ( )
LOS LOS LOS
P x , y 通常有 3 种方法:1将下一目标路径点 Pn+1 作
为 LOS 点 , 即 LOS n 1
P P+
= [ 141 ] ; 2 根 据 横 向 跟 踪 误 差 e 和 固 定 纵 向 距 离
Δ= nL (n > 1) 计算 LOS
P [60];3以 Ob 为圆心、 ( )
RLOS = nL n > 1 ( L 为船长)为半径
的圆弧与目标路径 n n 1
P P + 交点中距离下一路径目标点 Pn+2 更近的一个交点作为
LOS
P [103]。方法1当环境干扰存在时容易出现较大的横向跟踪误差;方法2当横


58
向误差较大时,可能造成船舶轨迹难以收敛到目标路径。因此,方法3被较多
地应用于路径跟随控制中[103]。
ψ
ψP
LOS
ψ
On
PLOS
Ob
图 4-2 LOS 导航原理
应用方法3计算 LOS
P 的公式如下:
( )( )
2 22 LOS b LOS b LOS
LOS b 1
LOS b 1
nn
nn
xx yy R y yy y x xx x
+
+
 −+ − =
− −
=
− −

(4-1)
一般来说,通过式(4-1)求解得到的交点有两个或者一个,但当船舶偏移
目标路径的横向距离 e 较大时,可能造成式(4-1)没有实数解,为避免这种情
况发生, LOS
R 定义为:
LOS
3, 3 ,3
Le L
R eLe L
≤
= + >

(4-2)
定义 P
ψ 为船舶目标路径方向角, P
ψ =ψ−ψ
 为船舶相对首向角(ψ为船首
向)。关于横向跟踪误差 e 和相对首向角ψ 微分方程如下[48]:
e u sin v cos
r
ψψ
ψ
=+
 =



 (4-3)
需要说明的是, e 有正负之分,规定船舶在目标路径方向右侧时为正,反之
为负。当外界环境中水流干扰可以忽略时,在欠驱动 USV 路径跟随过程中,
0
u ≈ u ( u0 > 0 是定常速度), v ≈ 0 。因此式(4-2)简化为:
e = u0 sinψ
 (4-4)


59
当外界环境中水流干扰不能忽略时( 0
Vc > ),假定 USV 相对水流的速度
[ ]T
,
r rr
v = u v 始终不变,即 ur ≈ u0 、 0
vr ≈ ,根据式(2-15), e 的微分方程变为:
()
0 sin cos
cc
e = u + u ψ + v ψ
 (4-5)
其中, uc 、 vc 分别为水流速度在附体坐标系 x 轴、 y 轴的速度,具体定义为:
sin
sin cos
cos sin cos
c cc c cc
uV
v Vβ
ψψ
ψψ β
  

=−
  


  
LOS 角 LOS
ψ 是船舶目标路径方向 n n 1
P P + 与目标船首向方向 b LOS
O P 的夹角,可
由式(4-6)计算,即:
LOS LOS
arcsin e
R
ψ 
=−  

 (4-6)
其中, LOS 2 , 2
ππ
ψ 
∈− 

 。为使船舶首向角ψ跟踪至 b LOS
O P 方向,则需要满足
LOS
ψ →ψ 。当 LOS
ψ =ψ 时,有:
( ) 22
0 LOS
LOS LOS
c evc R e
eu u
eR R
−
+
=− +
 (4-7)
在满足式(4-7)条件下,可利用李雅普诺夫第二法来证明横向跟踪误差
e → 0 。 已 知 e = 0 为 状 态 方 程 ( 4-7 ) 的 一 个 平 衡 点 , 设 置 李 雅 普 诺 夫
(Lyapunov)函数为 ( ) 2
V e = e ,结合式(4-5)有:
( ) 2( ) 2 2
0 LOS
LOS LOS
2
2
2 c evc R e
eu u
V e ee R R
−
+
= =− +
  (4-8)
由于一般水流速度Vc 较小,因此可认为 0 c
u ≥ u ,即 0 0
c
u + u > 始终成立,要
使V (e) ≤ 0
 成立,则需要满足:
()
()
2 22 LOS
0
LOS LOS
22
2 LOS 0 LOS
0c
c
c c
u u e ve R e RR
vR e
e uu
Re
+−
≥− +

−

=− + −


因此只要:


60
()
LOS
22 0
c
cc
Rv
e
uu v
>
++
就有V (e) ≤ 0
 ,并且满足当且仅当 e = 0 时V (e) = 0
 。因此,当水流速度
0
Vc > 时, e 将收敛至一个有限区域内;当水流速度 0
Vc = 时, e 将收敛到 0 。
当船舶趋近目标点 Pn+1 时,目标路径需要由 n n 1
P P + 切换至 n 1 n 2
P + P + 。通常当船
舶 进 入 以 Pn+1 为 圆 心 R0 为 半 径 的 接 纳 圆 ( acceptance circle ) 内 , 即
( )( )
2 22 b n1 b n1 0
xy yy R
++
− + − ≤ 时,开始进行目标路径切换。为了保证式(4-4)始
终在目标路径上,需保证 LOS 0
R ≥ R 。通过查阅现有文献,接纳圆半径通常设为固
定值 L 或者 2L 。
4.2.2 自适应 LOS 导航算法
当船舶刚进入接纳圆时,LOS 角 LOS
ψ 和相对首向角ψ 会发生突变,导致船舶
不可避免地偏离目标路径。当相邻路径夹角 ( )
θ∈ 0,π/ 2 较小时,船舶需要更早地
转向以有充分的时间调整航向,此时如果接纳圆 R0 半径较小,船舶转向会滞后,
从而导致路径跟随控制效果变差;相反地,当θ 较大时,此时如果接纳圆半径较
大,船舶会过早跟踪下一路径,导致对上一路径跟踪不完全。因此,接纳圆半径
R0 与相邻路径θ之间存在最优对应关系,使得船舶路径跟随的精度更高。
介于固定接纳圆半径 R0 存在的问题,一种可自动调整接纳圆半径 R0 的算法
被提出并描述如下:
R0 需满足如下条件:
(1) R0 应满足 min 0 max
R ≤ R ≤ R 。设置 min
R 是为了防止因 R0 过小而导致无法
正常切换到下一路径;设置 max
R 是为了防止因 R0 太大而导致路径跟随不完全。
(2)与驾驶车辆类似,如果遇到急弯,通常需要提前打方向盘,反之亦然。
基于这种常识, R0 应该与相邻路径夹角成反比。定义 R0 l 1 M L
π
θ


= −+



  ,其
中 10
π
θ − > , M 和 l > 0 为待定参数。
基于上述条件, R0 可表示为:


61
2
min max min
0
max max min
1,
1
,0
1
l LR R R
lL
R
R RR lL
ππ
θ
θ
π
θ
 
− + ∀≥
  −

+
=  ∀ ≤ <
 −+

(4-9)
其中 l 的值需根据特定船舶操纵特性来确定,确定 l 值的一般步骤如下:
(1)选择 n + 2 个目标路径点,生成路径后产生 n 个大小不同的路径夹角,
记为{ }
12
, , ,n
θ θ  θ 。选择路径时应尽量保证路径每个夹角θ与其他不同。
(2)使用固定的接纳圆半径测试路径跟随的效果,设置平均横向跟踪误差
ea 为评估指数, ea 定义如下:
()
a 1
sim
1N
i
e ei
N=
=  (4-10)
式中, N 表示完成路径跟随整个过程的总控制步数, ( )
e i 表示第 i 步横向跟
踪误差。容易得到, ea 越小路径跟随效果越好。
(3)使用一系列的接纳圆半径 R0 ,比如{ }
L, 2L,, nL ,依次对路径跟随效
果进行测试,得到每个路径夹角θi 对应的最优接纳圆半径序列 { 0i}
R ,记为
{}
01 02 0
, ,,n
R R  R 。理论上路径点越多( n 越大),试验结果越好( l 估计越精
确),但是同时也会增大试验的工作量,因此通常选择 3 ≤ n ≤ 5 。
(4)应用最小二乘法对 l 的值进行估计,记估计值为 lˆ ,其计算公式如下:
( )1
TT
lˆ −
= x x x y (4-11)
式中:
T
2
22
12
= 1, 1, , 1
n
ππ π θθ θ


  

−− −

  

    

x ,
T 01 min 02 min 0 min
= , ,,n
RR RR RR LL L

−− −


y
4.3 路径跟随控制模型
欠驱动船舶由于没有侧向推进器,船舶的侧向移动只能通过调整船舶船首


62
向来实现,而且路径跟随过程对跟踪路径的时间性没有约束,通常在保证船舶
航速大小不变的情况下通过调整船舶舵角实现对路径的精确跟踪。
4.3.1 响应型模型
针对舵角响应模型,在考虑干扰 d0 和测量噪声(随机干扰) w 时,在模型
(2-23)的基础上,采用如下模型作为路径跟随中的航向控制模型:
()
()
,
1E
EE E
rr
rg
rK
T
ψ δ
δδ
δ

  
  
== +
  
 −

  


 
x
x w (4-12)
其中,系统状态为 [ ]T
= ψ r r δ
x ,系统输入为 E
u =δ ,系统输出为
y =ψ , 函 数 ( ) ( ) ( 3)
33 12 0 12
1
, EE
EE EE
K T T KK T
g r r T Tr d
TT T T
δ α δδ
 −
= −− − + + + +



x。
模型(4-12)中其他参数定义与模型(2-23)相同。
4.3.2 路径跟随控制模型
在本文提出的 USV 路径跟随控制方法中,自适应 LOS 导航算法根据船舶当
前位置和目标路径实时计算目标船首向,利用 MPC 算法实现对目标船首向的跟
踪,从而使路径横向跟踪误差 e 逐渐减小。因此,有必要将 e 作为一个系统状态
变量,于是定义新的状态变量为 [ ]T
N= e ψ r r δ

x ,结合式(4-7)和(4-12)
得到相应的系统模型为:
()
()
()
()
0 sin cos
0
,, ,
1
cc
N N NE
EE E
uu v
rr
fu g
K
T
ψψ
δ
δδ
+ + 

  
== +
  



−




x x w x w (4-13)
式中干扰可表示为 [ ]T
1234
w = ητ ητ ητ ητ ,其中 [ ]
1234
τ ,τ ,τ ,τ ∈ −1,1 是标
准均匀分布的随机数,η为干扰强度系数。


63
4.4 基于自适应 LOS 和 MPC 的路径跟随控制
本文利用 MPC 实现 USV 路径跟随控制中的船首向跟踪。根据系统模型(4
13),可得 MPC 预测模型为:
()
()
()
()
0 sin cos
,,
1
cc
N P N NE
EE E
uu v
rr
fu g
K
T
ψψ
δ
δδ
+ + 


= = 


−




x x x (4-14)
对模型(4-14)进行离散化,可得:
( ) () ()
()
1,
N PN
k f k uk
′
x + = x (4-15)
通常可根据系统具体控制需求来选择不同的离散化方法,本文选择龙格-库
塔方法实现离散化。
USV 路径跟随过程中系统参考状态为 ( ) ( )
LOS
0 000
Nr k =  ψ k 


x ,于
是模型预测控制器目标函数设计如下:
() ( ) ( ) ( )
1
10
ˆ1
C
PN
N
N Nr R
ii
Jk k i k i uk i
−
==
= + − + + +−

Q
x x (4-16)
其中, NP 为预测步长, NC 为控制步长, ( )
xˆ N k + i 为第 k + i 时刻的预测状
态, 5×5
Q ∈  和 R ∈  分别表示权重矩阵和权重系数。因此,模型预测控制器的
最优化问题可描述为:
() ( )
( ) ( )( )
()
( )( )
min max
min max
arg min
..
ˆˆ
1 , , 0,1, , 1
1 , 1,
,
k
N PN P
C
E
E
Jk
st
k i f k i uk i i N
uk i uk i i N
δ δδ
δ δδ
′
++ = + + = −
+ = +− ≥ −
≤≤
Δ ≤Δ ≤Δ

u*
x x (4-17)


64
其中, min
δ 和 max
δ 为输入量约束, min
Δδ 和 max
Δδ 为输入增量约束。通过求解
最 优 化 问 题 ( 4-17 ) 得 到 k 时 刻 的 最 优 输 入 序 列 为
() () ( ) ( )
{}
* ** *
, 1, , 1
C
u k = u k u k+  u k+N + 。
在完成问题(4-17)描述后,对 USV 路径跟随算法总结如下:
(1)在路径跟随前根据自适应 LOS 中对 l 的估计流程,得到 l 的估计值 lˆ ;
(2)初始化系统参数,即设置目标路径点{ }
12 2
, , ,n
P P P+
 ,测量船舶初始状
态 x (k )(k = 0) ,以及计算每个路径点的最优接纳圆半径{ }
01 02 0
, ,,n
R R R ;
( 3 ) 在 线 求 解 问 题 ( 4-17 ) , 得 到 ( )
k k = 0,1, 2, 时 刻 最 优 输 入 序 列
() () ( ) ( )
{}
* ** *
, 1, , 1
C
u k = u k u k+  u k+N + ;
(4)将最优控制序列中的第一个控制量,即 ( )
u* k ,作用至 USV 动力机构;
(5)在下一时刻 k + 1 ,感知系统采集到船舶真实状态 x (k +1) ,并判断船
舶是否到达终点,如果没有到达,则将 x (k +1) 反馈至系统并重复步骤(2-4);
如果到达,则终止循环。
4.5 仿真实验
4.5.1 仿真参数设计
由于本章提出的 USV 路径跟随控制方法使用的是舵角响应模型,该模型参
数易于辨识,因此本文选择实验室现有模型船作为研究对象来开展 USV 路径跟
随控制仿真实验研究。
模型船基本参数如表 4-1 所示。模型船运动模型参数通过 Z 型试验数据进行
最小二乘法辨识法得到,模型(4-12)中参数辨识结果分别为: 1
K 0.5060 s−
=、
T1 = 1.2481 s 、 T2 = 0.1245 s 、 T3 = −0.0757 、 d0 = 0 、α = 0.0081 、 1.0000
KE = 、
0.1000 s
TE = 。
表 4-1 模型船基本参数 参数 符号 规格 单位 长度 L 0.95 m
宽度 B 0.24 m
质量 m 5.40 kg 名义航速 U 0.80 m/s 推进方式 - 单桨单舵 
k


65
仿真和控制参数设置为:控制时间间隔 Ts = 0.5 s ,预测步长 10
NP = ,控制
步长 8
NC = 。输入约束为: ( )
30 30
− ° ≤ δE k ≤ ° , ( )
ss
120 120
E
− ° ⋅T ≤ Δδ k ≤ ° ⋅T 。
当 Ts = 0.5 s 时,输入约束可表示为: ( )
E
−60° ≤ Δδ k ≤ 60° ,因此对于本模型船,
约束条件只要满足 ( )
E
−30° ≤ δ k ≤ 30° 即可。权重矩阵设置如下:
10 0 0 0
01 0 0 0
0 0 0.01 0 0
0 0 0 0.01 0
0 0 0 0 0.001
=






Q , R = 0.1
本仿真以 MathWorks 公司开发的商用软件 Matlab 作为仿真平台,使用 ode45
函数(龙格-库塔法)实现模型离散化,使用 fmincon 函数实现非线性最优问题
求解,基于脚本文件(m 文件)实现函数调用和数据存储等功能。
4.5.2 自适应 LOS 参数整定
LOS 接纳圆半径对路径跟随效果的影响有必要通过仿真试验来说明。首先
定义路径I的路径点坐标依次为: ( )
Pa 1,1 、 ( )
Pb 11,10 、 ( )
Pc 20, 22 、 ( )
Pd 40,15 、
()
Pe 34,1 (坐标单位为 m)。船舶起始点位置和船首向分别设为 ( )
P0 2,1 和 45° 。
接纳圆半径上下限设置为 Rmax = 9L 和 Rmin = 0.5L 。
图 4-3 不同接纳圆半径对应的跟踪误差
分别设置接纳圆半径为 0.5L 、1.0L 、 2.0L 、 3.0L 、 4.0L 、 5.0L 、 6.0L 、
7.0L 、 8.0L 和 9.0L ,在路径点 Pb 、 Pc 和 Pd 处可以得到不同跟踪误差,如图 4-3 所


66
示。可见,对于每一路径点都存在一个最优接纳圆半径,对应 Pb 、 Pc 和 Pd 最优
接纳圆半径分别为 R0b = 0.5L 、 R0c = 1.0L 和 R0d = 4.0L 。根据式(4-11),可计
算得到自适应接纳圆参数 l 的估计值为 lˆ = 2.7 。
为验证自适应 LOS 算法的有效性,有必要选择一条不同的路径,即路径II,
其路径点依次设置为: ( )
Pa′ 1,1 、 ( )
Pb′ 15,1 、 ( )
Pc′ 25, 7 、 ( )
Pd′ 25, 25 、 ( )
Pe′ 45, 25
(坐标单位为 m)。起始位置和船首向分别设置为 ( )
P0 1, 2 和 90° 。将 lˆ = 2.7 代入
式 ( 4-9 ) , 可 以 计 算 得 到 路 径 I 和 路 径 II 的 最 优 接 纳 圆 半 径 序 列 分 别 为
{}
0.5L,1.8L,3.7L 和{ }
0.6L,1.1L, 3.2L 。
4.5.3 自适应 LOS 与传统 LOS 的路径跟随效果对比
为验证自适应 LOS 算法的路径跟随效果,在无干扰情况下使用固定接纳圆
半径与自适应接纳圆半径进行对比。当固定接纳圆 半径依次设置为 、
、 、 、 、 、 、 、 和 时,可以得到船
舶对路径I和路径II的平均跟踪误差 和 ,平均跟踪误差 定义为:
1
1N
ai i
ee
N=
=
其中 N 表示跟踪路径点的总数, ei 表示第 i 步横向跟踪误差。
根据仿真结果,可得到路径I和路径II在不同接纳圆半径时对应的平均跟
踪误差 ea1 和 ea2 ,如表 4-2 所示。
表 4-2 固定和自适应接纳圆半径跟踪误差比较
()
R0 L 固定接纳圆 自适应
接纳圆
0.5 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0
()
ea1 m 0.67 0.42 0.33 0.34 0.43 0.59 0.78 1.00 1.27 1.57 0.29
()
ea2 m 0.53 0.36 0.35 0.41 0.47 0.67 0.89 1.11 1.38 1.68 0.28
容易看出,自适应接纳圆半径能够使船舶路径跟踪误差更小,且 R0 = 2.0L
是固定接纳圆半径中跟踪误差最小的,这也印证了大部分文献选择 2L 作为接纳
圆半径的原因。为更进一步说明自适应 LOS 的路径跟随效果,在无干扰情况下
固定接纳圆半径 2L (传统 LOS)与自适应接纳圆半径(自适应 LOS)对路径I
和路径II的跟踪效果分别如图 4-4 和 4-5 所示,实时误差变化比较如图 4-6 所示。
R0 0.5L
1.0L 2.0L 3.0L 4.0L 5.0L 6.0L 7.0L 8.0L 9.0L
ea1 ea2 ea


67
由图 4-4 和 4-5 容易看出自适应 LOS 的运动轨迹更接近目标路径,轨迹的超调量
也更小。需要说明的是,图 4-6 中自适应 LOS 轨迹的跟踪误差突然变大是因为接
纳圆较大而导致跟踪误差的计算过早地切换到下一条路径,实际的跟踪误差并
没有那么大。
图 4-4 路径I固定与自适应接纳圆半径跟踪效果比较
图 4-5 路径II固定与自适应接纳圆半径跟踪效果比较
图 4-6 路径I和路径II固定与自适应接纳圆实时路径跟随误差比较
0 5 10 15 20 25 30 35 40 45 X 位置 (m)
0
5
10
15
20
25
30
(1,1) (15,1)
(25,7)
(25,25) (45,25)
参考轨迹 固定接纳圆轨迹 自适应接纳圆轨迹
R0=1.1L
R0=3.2L
Pa' R0=0.6L
Pb'
Pd' Pe'
Pc'
0 10 20 30 40 50 60 70
-2.0
-1.5
-1.0
-0.5
0.0
0.5
1.0
1.5
2.0
2.5
3.0
3.5 路路I自自自自自自 路路I固固自自自(2L) 路路II自自自自自自 路路II固固自自自(2L)
误误e (m)
时时 (s)


68
4.5.4 无干扰情况下基于自适应 LOS 和 MPC 的路径跟随控制
当0
VC = 、η= 0 时,针对路径II,基于自适应 LOS 的路径跟随控制效果如
图 4-7 所示,相应的系统输入和跟踪误差分别如图 4-8 a)和 b)所示。
图 4-7 路径II路径跟随结果
a) 系统输入 b) 横向跟踪误差
图 4-8 路径II路径跟随误差和系统输入
从路径跟随结果可见,在跟踪直线段路径时,USV 路径跟踪横向误差 e 可逐
渐收敛至 0 ,符合 4.2.1 节的稳定性分析结果。
4.5.5 基于 MPC 与基于 Backstepping 的路径跟随对比
为说明本文提出的基于 MPC 的路径跟随控制方法的优越性,选择在非线性
控制中应用广泛的 Backstepping 方法作为 MPC 的对比方法。本节首先提出基于
自适应 LOS 和 Backstepping 的路径跟随控制方法;然后将该方法应用至路径II
的路径跟随控制过程;最后对比基于 MPC 和基于 Backstepping 的路径跟随效果。
0 20 40 60 时间 (s)
-30
-20
-10
0
10
20
30
误差 e (m)


69
4.5.5.1 Backstepping 方法
不同于 MPC 的在线求解方法,Backstepping 方法可根据系统模型和控制需求
直接推导得到相应的控制律。为与基于自适应 LOS 和 MPC 的路径跟随控制方法
进行对比,提出了一种基于自适应 LOS 和 Backstepping 路径跟随控制方法。实
际上 Backstepping 方法主要完成对目标船首向的跟踪。
Backstepping 对模型有一定的要求,需要满足相应的状态空间形式才能实现
控制律的推导。本文利用模型(2-10)来设计 Backstepping 控制器。模型(2-10)
可重新写为:
()
12
22
1
xx
x f x bu
yx
=
 = +
 =


 (4-18)
其中, x1 为船首向, x2 为首摇角速度, ( ) ( )
3
2 22
1
fx x x
= − T α + 为非线性项,
K
bT
= 为系统参数, u 为系统输入(舵令), y 为系统输出(船首向)。
针对模型(4-18),设虚拟控制量分别为 z1 、 z2 ,构造虚拟控制模型为:
()
11
22 1
d
zx
zx z
ψ
φ
=−
 = −

(4-19)
其中 d
ψ 为目标船首向。为实现(4-19)的全局镇定,即 z1 → 0 、 z2 → 0 ,
构造 Lyapunov 函数分别为:
2 11
1 2
V= z, 2
21 2
1 2
V =V + z
设计 ( 1 ) d 1 1 1
φ z =ψ − k z − n
 、 () ( )
1 1 2 22 22
1
u z z f x kz nz
b φ 
= −− − −

 ,使得V1 ≤ 0
和V2 ≤ 0
 。因此,最终的 Backstepping 控制律为:
() ( )
3
1 2 1 1 2 2 22 22
1
()
dd
T
u k z z z x x kz nz
KT
ψ φψ α

== − + − − + + − −


  ( 4-20 )
4.5.5.2 对比实验


70
在不考虑干扰的影响下,基于 Backstepping 的路径跟随控制采用与第 4.5.4
节完全相同的仿真参数、初始条件设置,得到相应的路径跟随控制效果。对于
Backstepping 控制律(4-20),参数设置为: k1 = 500 、 n1 = 1 、 k2 = 1 、 n2 = 0.5 。
基于 Backstepping 的路径跟随控制效果与基于 MPC 的路径跟随控制效果对比如
图 4-9 所示,输入和横向误差对比结果如图 4-10 所示。
图 4-9 基于 Backstepping 和基于 MPC 的路径跟随控制效果对比
a) 系统输入 b) 横向跟踪误差 图 4-10 两种控制方法系统输入和横向跟踪误差比较
4.5.5.2 结果分析
由图 4-9 可知,基于 Backstepping 的路径跟随控制方法在路径跟随控制过程
中超调量大于基于 MPC 的路径跟随控制方法,从图 4-10 b)横向跟踪误差对比中
也可以发现这点,并且基于 Backstepping 的路径跟随控制的误差最终很难收敛到
0。这其中的原因可能为:1Backstepping 没有预测策略,仅是针对当前时刻求
解目标船首向,容易导致超调;2Backstepping 对于约束的处理比较随意,采用
“斩波”的方式实现约束处理,即当计算到的系统输入超出约束范围时,强制
0 5 10 15 20 25 30 35 40 45 X 位置 (m)
0
5
10
15
20
25
30
参考轨迹
Backstepping轨迹 MPC轨迹


71
调整至约束范围内的值,而 MPC 在最优化问题求解时主动考虑了这种约束,图
4-10 a)具体展示了 Backstepping 与 MPC 的系统输入对比情况。
4.5.6 干扰情况下基于自适应 LOS 和 MPC 的路径跟随控制
由于在真实航行条件下船舶不可避免地会受到风、浪、水流等干扰的影响,
而这些环境干扰在一定程度上增加了船舶路径跟随的困难,因此有必要验证路
径跟随控制器能否在一定环境干扰下仍能保证较好的控制效果。在真实环境下,
风、浪、水流对船体的作用力或力矩难以直接测量,且很难有统一的模型来描
述这些力或力矩的时变特征,因此这里采用较为简单的均匀分布噪声模型来模
拟干扰对路径跟随的影响。
(1)水流干扰对路径跟随的影响 设置干扰参数η= 0 ,水流速度参数为 0.1 m / s
VC = 、 0.5 rad
βC = π 。应用自
适应 LOS 导航算法和 MPC 控制方法可实现 USV 的路径跟随控制,其与无水流
速度情况下的跟踪效果对比如图 4-11 所示,路径跟随过程中有水流与无水流时
系统输入、跟踪误差和船首向对比如图 4-12 所示。由图 4-12 可见,船舶的横向
跟踪 e 始终存在误差,即使是在直线段也难以收敛到 0,当水流存在时横向跟踪
误差高于无水流时横向跟踪误差时,同样符合 4.2.1 节稳定性分析结果。同时,
水流存在时系统输入波动大于无水流时系统输入波动。
图 4-11 路径II有水流与无水流时路径跟随效果比较
X 位置 (m)
0 10 20 30 40
Y 位置 (m)
0
5
10
15
20
25
30
参考轨迹 无水流干扰轨迹 有水流干扰轨迹


72
a) 系统输入 b) 横向跟踪误差
c) 船首向
图 4-12 路径II有水流与无水流时系统输入、跟踪误差和船首向比较
(2)其他干扰对路径跟随的影响
设置干扰参数η= 3 ,水流速度参数为 0 m / s
Vc = 。应用自适应 LOS 导航算
法和 MPC 控制方法在有干扰情况下实现对 USV 的路径跟随控制,其与无干扰情
况下的路径跟随效果对比如图 4-13 所示,与无干扰情况下的系统输入、横向跟
踪误差、船首向对比分别如图 4-14 a)、b)和 c)所示。由图 4-13 和 4-14 可以看出,
在干扰存在情况下,路径跟随控制器仍然能够跟踪上目标路径,但是为了尽可
能消除干扰的影响,控制器输入波动则需要更大。当没有干扰存在时,船舶能
够在路径的直线段完全跟踪上目标船首向和目标路径,但当有干扰时,船首向
跟踪和目标跟踪始终在一个范围内波动。从另一个角度也说明所提出的控制方
法具有一定的抗干扰能力,在一定干扰存在下能够保证 USV 路径跟随的控制精
度在一定的范围内。
舵角 (deg)
误差 e (m)
船首向 (deg)


73
图 4-13 路径II有干扰和无干扰下路径跟随效果比较
a) 系统输入 b) 横向跟踪误差
c) 船首向
图 4-14 路径II有干扰和无干扰下路径跟随参数比较
(3)复合干扰对路径跟随控制的影响
在真实环境中,水流和其他干扰通常是同时存在的,因此有必要在复合干
扰(这两种干扰同时存在)的情况下对路径跟随效果进行对比验证。设置干扰
参数η= 3 ,水流速度参数为 0.1 m / s
VC = 、 0.5 rad
βC = π 。复合干扰控制效果与
0 5 10 15 20 25 30 35 40 45 X 位置 (m)
0
5
10
15
20
25
30
参考轨迹 无干扰轨迹 有干扰轨迹


74
无干扰情况下的效果对比如图 4-15 所示,与无干扰情况下的系统输入、横向跟
踪误差、船首向对比如图 4-16 a)、b)和 c)所示。从路径跟随轨迹和参数对比结果
不难看出,当复合干扰存在时,系统跟踪误差均大于相同强度单一干扰的跟踪
误差,系统输入、船首向波动也较大。
图 4-15 路径II有复合干扰与无复合干扰时路径跟随效果比较
a) 系统输入 b) 横向跟踪误差
c) 船首向
图 4-16 路径II有复合干扰与无复合干扰时路径跟随状态比较
X 位置 (m)
0 10 20 30 40
Y 位置 (m)
0
5
10
15
20
25
30
参考轨迹 无复合干扰轨迹 有复合干扰轨迹
时间 (s)
0 20 40 60
舵角 (deg)
-30
-20
-10
0
10
20
30
无复合干扰 有复合干扰


75
4.6 本章小结
针对 USV 路径跟随控制问题,提出了一种基于自适应 LOS 和 MPC 的路径
跟随控制方法,该自适应 LOS 方法能在一定程度上解决传统 LOS 因无法自适应
调整接纳圆半径而导致跟踪误差偏大的问题。基于非线性 Nomoto 模型建立了考
虑环境干扰和水流的 USV 路径跟随模型,并分析了路径横向跟踪误差的收敛特
性,利用模型船运动模型在 Matlab 平台下对提出的路径跟随控制方法进行验证。
结果表明:1本文提出的自适应 LOS 导航能提高路径跟随的精度;2基于 MPC
的路径跟随控制方法比基于 Backstepping 的路径跟随控制方法具有更高的跟踪精
度;3当存在一定大小的外界干扰和水流时,基于 MPC 的路径跟随控制仍可获
得较好的路径跟随效果。


76
第 5 章 模型不确定下基于 LS-SVM 的无人船路径 跟随自适应控制
USV 运动模型参数一旦确定以后(通过参数测量或者系统辨识方法),通
常认为该运动模型参数保持不变,并以此来设计路径跟随控制器。但是 USV 装
载量的改变、浅水区水深的改变、舵或螺旋桨执行机构的老化、船体表面粗糙
度的改变甚至船速变化等因素都可能会导致船舶重心、控制延时和运动阻力等
发生相应改变,从而引起 USV 运动性能和运动模型参数的改变,最终导致原有
路径跟随控制器控制性能变差,间接造成船舶能耗增加、航行风险增大等后果。
本章基于最小二乘支持向量机(least squares support vector machines, LS-SVM)
辨识方法,并结合第 4 章提出的欠驱动船舶路径跟随模型预测控制方法,提出一
种能够应对外界环境、自身状态改变的欠驱动船舶路径跟踪的自适应控制方法。
该方法能够主动检测船舶参数变化,利用 LS-SVM 辨识方法在线更新运动模型参
数,并将更新后的运动模型作为模型预测控制的预测模型,最终实现欠驱动船
舶路径跟随的自适应控制。
5.1 基于传统 LS-SVM 的运动模型参数辨识方法
为实现基于 LS-SVM 的模型参数辨识,首先设计模型变化指数判断船舶运动
模型是否发生改变,通过调整 LS-SVM 权重加快模型参数收敛速度;然后考虑到
模型参数随时可能发生变化,选择基于滑动数据窗口策略在线更新辨识数据,
以加快模型更新速度;最后,设计一种输入持续激励方法来避免输入长时间不
变造成的辨识激励不够问题。
LS-SVM 既可以用于设计分类器也可以用于系统辨识。函数估计是实现系统
辨识的基础,首先介绍 LS-SVM 在函数估计中的应用,再提出基于 LS-SVM 的
船舶路径跟随模型的参数辨识方法。
5.1.1 基于传统 LS-SVM 的函数估计方法
给定 N 个点的训练数据集{ } 1
,N
k kk
y=
x ,其中 n
xk ∈  是第 k 个输入数据,
yk ∈  是第 k 个输出数据。标准支持向量机(support vector machines, SVM)回
归模型为:


77
() ()
T
y x = w φ x + b (5-1)
其中, w 是权重矩阵, ( )
φ x 是输入空间到高维空间的映射非线性函数, b
是偏置。不同于标准 SVM,LS-SVM 定义如下优化问题求解最优函数估计:
() T 2
1
,, 1
11
min , 2 2
N
k
be k
J e γe
=

=



w w w w + (5-2)
满足:
()
T , 1, ,
k kk
y = w φ x + b + e k =  N (5-3)
其中, ek ∈  是第 k 组数据的误差变量,定义见式(5-3),γ> 0 是 ek 的权
重系数。为求解式(5-2)所示的最优化问题,定义如下拉格朗日函数:
( ) ( ) ()
T 1 1
, , , , -N
k k kk k
L b eα J e α φ b e y
=

= ++ −


w w w x (5-4)
其中,αk ∈  是拉格朗日乘子。优化问题(5-4)最优解应满足如下条件:
()
()
1
1
T
0
00
0 , 1, ,
0 0, 1, ,
N
kk k
N
k k
kk k
k kk k
L
L
bL e k N
eL b e y k N
a
αφ
α
αγ
φ
=
=
∂ = →
∂∂ = → =
 ∂∂ = → = =
∂∂ = → + + − = =
 ∂




w= x
w
wx
(5-5)
其中, ( 0)
αk = γek γ > 表明拉格朗日乘子αk 与误差 ek 成正比,当 0
ek ≠ 时
0
αk ≠ ,而标准 SVM 中拉格朗日乘子多数为 0[142]。因此 LS-SVM 在简化标准
SVM 算法的同时也丧失了标准 SVM 固有的解的稀疏性和鲁棒性问题[143]。为解
决稀疏和鲁棒问题,提出一种加权 LS-SVM(weighted LS-SVM)方法,该方法
将优化问题(5-2)变为:
() T 2
2
,, 1
11
min , 2 2
N
kk
be k
J e γ ve
=

=



w w w w + (5-6)


78
其中, vk 为权重因子。于是拉格朗日函数变为:
( ) ( ) ()
T 2 1
, , , , -N
k k kk k
L b eα J e α φ b e y
=

= ++ −


w w w x (5-7)
因此,优化问题(5-6)最优解应满足:
()
()
1
1
T
0
00
0 , 1, ,
0 0, 1, ,
N
kk k
N
k k
k kk k
k kk k
L
L
bL v e k N
eL b e y k N
a
αφ
α
αγ
φ
=
=
∂ = →
∂∂ = → =
 ∂∂ = → = =
∂∂ = → + + − = =
 ∂




w= x
w
wx
(5-8)
在消除式(5-8)中 w 和 e 后,式(5-8)可描述为如下方程形式:
T
00
+b
γ
    
=
    
 

1
1 Vα Y
Ω (5-9)
其中, [ ]T
1 = 1,1,,1 , [ ]T
12
,, N
α= α α α , [ ]T
12
,, N
Y = y y  y 。Vγ定义为:
1
11
diag , ,
N
vv
γ γγ

= 

V  (5-10)
于是,Mercer 条件可表示为:
( ) () ()
T
, , 1, , , 1, ,
kl k l k l
Ω = K x x =φ x φ x k =  N l =  N (5-11)
kl
Ω 是矩阵Ω 第 k 行第l 列的元素, ( )
k, l
K x x 是核函数。 ( )
k, l
K x x 通常为线
性核、多项式核、径向基(RBF)核或者多层感知(MLP)核[144]。由于线性核
函数具有的优良实时性和参数调节性能,为实现模型参数的在线辨识,线性核,
即( )
k, l k l
K x x = x x ,被选为本文的核函数。
式(5-10)中 ( )
1, ,
vk k =  N 有多种定义方式,在文[143]中, vk 定义如下:


79
1
2
12 21
4
ˆ
1, / /ˆ ˆ
,/
10 ,
k
k
kk
es c c es
v c esc
cc
−
≤
−
= ≤ ≤
−
 其他
(5-12)
其中, 和 是常数,通常选择 , 。 是 LS-SVM 误差 的
标准差估计,通常取为:
IQR
ˆ 2 0.6745
s= ×
其中,IQR(interquartile range)是四分位距,表示第三四分位数与第一四
分位数的差值。
结合式(5-1)、(5-5),LS-SVM 的函数估计表达式为:
( ) ( T)
1
N
kk k
y αb
=
=+

x x x (5-13)
其中,α和 b 是方程(5-7)的解。
5.1.2 基于传统 LS-SVM 的船舶路径跟随参数辨识方法
从函数估计表达式(5-13)可以看出,如果 b → 0 很小,则函数估计模型可
表示为:
()
yΤ
x =θ x (5-14)
其中, 是系数矩阵,且 。如果船舶路径跟随模型能转换为
(5-14)所示的线性形式,则可以求解得到模型参数。
这里提出一种基于 LS-SVM 的船舶路径跟随参数辨识方法,该方法采用式
(4-1)作为船舶运动模型,LOS 作为路径跟随导航算法,MPC 作为路径跟随控
制方法。由于辨识训练集是离散的,因此为实现模型参数辨识,有必要先将连
续模型进行离散化。不同于第 3、4 章采用的隐式离散化方法,这里需要采用一
种能够显式表达的离散化方法。
前向差分法是一种常用的微分方程数值解法。 ( )
f x 的 n 阶前向差分表达式为:
c1 c2 c1 = 2.5 c2 = 3.0 sˆ ek
n
θ∈ 
1
N
kk k
α
=
θ=  x


80
[ ]( ) ( ) ( ) ( )
()
0
1
ni
n h i
n
f x f x n ih
i
=
Δ = − +−
 (5-15)
其中, h > 0 是差分的自变量步长, ( ) ( ) ( )
()
11 !!
nn n i
in i n i
− −+
=−
 是二项式系数且
() 0
0n = ,( ) 0
nn = 。如果 h 足够小,可以假定 ( ) ( ) [ ]( )
n nh
n
fx
fx h
Δ
≈ [145]。
于是,模型(2-19)显式离散化后可得:
[ ]( ) ( ) [ ]( ) [ ]( )
[ ]( ) ( ) [ ]( )
2 21 12
3 3
1 33 1
12 0 3
1 hh h
hh
T Th t h t
t T T t Kh t h d KT t
ψψ
ψ βψ δ δ

− + Δ −Δ

Δ = 

−Δ + + + Δ



(5-16)
( ) ( ) [ ]( )
1 E Eh
δ t −δ t  h = T Δ δ t
  (5-17)
为使式(5-16)与模型(5-14)形式一致,定义:
[ ]( )
3 1h
y =Δ ψ t ,
12
0
1
12
3
1 1
T dKT
TT
KβT
+



= 



θ,
[ ]( )
()
[ ]( ) [ ]( ) [ ]( )
2
3
3
21
1 3
1
21
h
h
h
h
ht ht h
ht t ht
ψ δ
ψ
ψ δ

−Δ



=−Δ



− Δ 

Δ


x
同样地,为使式(5-17)与模型(5-14)形式一致,定义:
() ()
2E
y = δ t −δ t  h
  , θ2 = TE , [ ]( )
1
x2 = Δh δ t
当 b → 0 时,联立式(5-13)和式(5-14),可以得到θ的估计值θˆ :
()
1
ˆN
kk k
α
θ = = x (5-18)
为保证 b → 0 条件成立,优化问题(5-6)应更改为:
() T 2 2
3
,, 1
11 1
min , 2 2 2
N
kk
be k
J e γ v e γb
=

=+



w w w w + (5-19)
因此,优化问题(5-19)的最优解应满足如下条件:


81
()
()
1
1
T
0
0
0 , 1, ,
0 0, 1, ,
N
kk k
N
k k
k kk k
k kk k
L
Lb
bL v e k N
eL b e y k N
a
αφ
αγ
αγ
φ
=
=
∂ = →
∂∂ = → =
 ∂∂ = → = =
∂∂ = → + + − = =
 ∂




w= x
w
wx
(5-20)
则相应的矩阵方程由(5-9)变为:
T b0
γ
γ

−  
=

+  
 

1
1V Y
Ω α (5-21)
如果 T
γ
γ

− 
+

1
1 Ω V 是奇异矩阵或者非常接近于奇异矩阵,为了避免 b


α无
法求解,那么需要将矩阵 T
γ
γ

− 
+

1
1 Ω V 变为 8 T
8
10 γ 10 N
γ−
−

−+

++

1
1 Ω V I ,其中
I N 为维度为 N 的单位矩阵[146]。
因此,针对模型(5-16)和(5-17),由方程(5-21)可求解得到α1 和α2 ,
再根据式(5-18)可计算得到θˆ1和θˆ2 。当θˆ1已知时,则有:
() ( ) ()
() () ()
0
12 1 1 1 12 12 12
3
111 12 12 12
ˆˆ ˆ
1, 2, 3,
1ˆ ˆ ˆ
4, 5, 6
d
TT K TT TT TT
KT TT TT TT
β
+= = =
===
θθ θ
θθθ
求解上述方程组可分别得到 1 2 3 0
K ,T ,T ,T ,β, d 具体数值。当θˆ2 已知时,则
ˆ2
ΤΕ =θ 。
5.2 基于λ-LS-SVM 的运动模型在线参数辨识方法
5.2.1 基于滑动数据窗口的在线辨识方法
USV 航行时会不断产生新的数据添加至辨识训练集中,如果旧的数据一直
保留,那么辨识训练集会越来越大,对新数据也会越来越不敏感,因此有必要


82
考虑在添加新数据的同时删除旧数据。由于路径跟随控制周期Ts 通常比辨识数据
产生周期(数据采集周期) h 长很多,因此没必要每一次获取新的数据时都更新
一次模型。又由于辨识训练集需要的辨识数据较多,完整更新一次数据集花费
的时间通常大于控制周期。基于这些原因,滑动数据窗口是一个比较合适的方
式来更新辨识训练集,其机理如图 5-1 所示。
...
...
Nu
Nu
t
tk
tk+1
...
滑动窗口长度(Nw)
: 旧数据; : 新数据
() ()
12
ˆ k ,ˆ k
θt θ t
() ()
1121
ˆ k ,ˆ k
tt
++
θθ
图 5-1 滑动数据窗口机理
滑动数据窗口数据更新步骤可总结为:
(1)设置滑动数据窗口大小为 Nw ,在时刻 tk ,通过 LS-SVM 辨识方法估计
船舶运动模型参数 ( )
θ1 tk 和 ( )
θ2 tk ;
(2)随着新的数据不断产生,滑动数据窗口数据也在不断增大;
(3)当滑动数据窗口数据数量等于 w u
N + N 时,即为时刻 tk+1 ,滑动数据窗
口中前 Nu 个数据从训练集中删除,基于新的训练数据辨识得到新的模型参数
()
11
ˆ tk+
θ 和( )
2 +1
θˆ tk ;
(4)循环步骤(1)~(3),直到没有新的数据产生。
5.2.2 模型变化指数设计
参数辨识的精度一定程度上取决于训练数据的质量,由于测量传感器存在
误差和不稳定的特性,可能会导致在训练集中存在异常数据,因此有必要提高
参数辨识方法的鲁棒性。对于加权 LS-SVM 方法,每个辨识数据均可通过式(5
12)计算得到相应权重,当误差 ek 较大时,权重 vk 设置很小。然而,这种权重
设置方式在某些情况下可能存在一些问题。比如,当系统模型在时刻 t1 发生更改
时,会导致在下一时刻 t2 时,训练数据集中同时存在旧模型产生的数据(旧数据)
和新模型产生的数据(新数据),在这种情况下如果根据式(5-12)权重分配方
法,会导致新数据由于误差较大而被忽略。相反,为了达到更好的控制效果,


83
新数据应该有更高的权重。
如果能够检测到系统模型是否发生改变,就可以比较合理地分配权重,使
得新模型参数能够更及时地被辨识出来。参考文[147]中对辨识误差的分析和描
述,提出一种检测模型是否发生变化的指数,即模型变化指数,定义如下:
w
wu
1
1
u
1N
k ki iN N
e
N
λ−
= −+
=  (5-22)
其中, k 1
ei − 表示使用 tk−1 时刻的辨识结果计算得到的 tk 时刻训练数据集中第 i
个数据的辨识误差(定义如式(5-3)所示)。因此,在 tk 时刻,指数 0
λk > 描述
了在训练数据集中新添加的数据子集是否与上次辨识结果吻合,即模型是否发
生改变。如果模型已经发生改变,则λk 较大;反之,较小。
如果检测到模型发生改变,则可以将训练数据集分成两部分,在现有权重
分配的基础上提高第二部分(新数据)的权重,同时降低第一部分(旧数据)
的权重,这样新模型产生的数据将会对辨识结果有更多的贡献。于是将新的权
重 vk 定义为:
{
3w
4
, /2
k,
kk
cv k N
v cv <
= 如果
其他 (5-23)
其中, vk 定义如式(5-12)所示, 3
0 < c < 1 和 c4 > 1 是常数。相应地,式
(5-21)中Vγ 变为:
1
11
diag , ,
N
vv
γ γγ

= 

V
5.2.3 输入持续激励方法
输入激励对于参数辨识性能有较大的影响。在船舶路径跟随过程中,如果
外界环境干扰较小,船舶目标路径也是一条直线段,那么船舶真实航迹会逐渐
趋近为一条直线,此时船舶输入舵角也会基本保持不变。在这种情况下,由于
缺乏输入激励的作用,很难通过辨识数据集获得真实的模型参数。由于在各个
频率上功率相同,白噪声信号常作为系统辨识的输入激励信号[148]。本文应用高
斯白噪声信号作为输入激励信号。考虑到添加的输入激励信号会在一定程度上
影响船舶路径跟踪的效果,因此输入激励信号的强度应控制在较小的范围。假
设原有输入信号为 ori
u ,添加的输入激励信号为 add
u ,于是真实的输入信号 per
u 为:


84
() () ()
uper i = uori i + uadd i , i = 1, 2, (5-24)
其中, ( 是标准差)。
5.2.4 基于λ-LS-SVM 的船舶运动模型在线辨识算法
由于某些未知原因,参数辨识结果在某些情况下可能会无法收敛或者与真
实结果偏差较大。比如对于欠驱动船舶二阶非线性舵角响应模型,当 K < 0 或
T1 < 0 时,表明船舶不具备航向保持或控制特性,如果辨识结果出现 K < 0 ,就
认为辨识结果出错,继续保持上一辨识结果。基于 5.2.1~5.2.3 节提出的辨识方法,
提出基于 λ-LS-SVM 的欠驱动船舶路径跟随参数辨识方法,具体步骤如下:
(1)初始化模型参数 ( ) ( )
{}
01 2
ˆˆ
Θ = θ 0 ,θ 0 ,并且设置 k = 1;
(2)在时刻 tk ,基于滑动数据窗口策略得到模型(5-16)和模型(5-17)
的训练数据集 1
Γk 和 2
k
Γ ,利用式(5-12)分别计算 1
Γk 和 2
k
Γ 中的第 n 个数据的权
重 ()
1
vn k 和 ( )
2
vn k ( w )
n = 1, 2,, N ,根据 ( )
1
vn k 和 ( )
2
vn k 以及通过式(5-18)、(5
21)可计算得到 ( )
θˆ1 k 和 ( )
θˆ2 k ;
(3)在Γk 训练数据集中,利用式(5-22)计算 1
λk 和 2
λk :
1如果 1 1
λk < λc 且 2 2
λk < λc ( 1
λc 和 2
λc 分别为模型参数θˆ1 和θˆ2 对应的阈值),则
表明系统模型没有发生改变,计算得到的 ( )
θˆ1 k 和 ( )
θˆ2 k 作为 k 时刻系统模型参
数;
2如果 1 1
λk ≥ λc ,则通过(5-23)计算得到新的权重 ( )
1
vn k ,根据 ( )
1
vn k 通过
式(5-18)、(5-21)计算得到新的辨识参数 ( )
θˆ1′ k ;
3如果 2 2
λk ≥ λc ,则通过(5-23)计算得到新的权重 ( )
2
vn k ,根据 ( )
2
vn k 通过
式(5-18)、(5-21)计算得到新的辨识参数 ( )
ˆ2 k
θ′ ,并设置 ( ) ( )
22
ˆˆ
k ′k
θ =θ ;
(4)如果 ( )
θˆ1′ k 中的 K < 0 或T1 < 0 ,则时刻 tk 的辨识结果为 ( ) ( )
11
θˆ k =θˆ k − 1 ;
否则,时刻 tk 的辨识结果为 ( ) ( )
11
ˆˆ
k ′k
θ =θ ;
(5)将 ( ) ( )
{}
12
ˆ ,ˆ
Θk = θ k θ k 作为时刻 tk 的最终模型辨识结果,并将计算得到
的模型参数更新至路径跟随控制器;
(6)设置 k = k +1,并重复步骤(1)~(5),直到路径跟随过程完成。
( ) ( 2)
uadd i ~N 0,δ δ